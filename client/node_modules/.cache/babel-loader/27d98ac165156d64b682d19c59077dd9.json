{"ast":null,"code":"/*!\r\n  Copyright (c) 2016 Jed Watson.\r\n  Licensed under the MIT License (MIT), see\r\n  http://jedwatson.github.io/classnames\r\n*/\n\n/* global define */\n(function () {\n  'use strict';\n\n  var hasOwn = {}.hasOwnProperty;\n\n  function classNames() {\n    var classes = [];\n\n    for (var i = 0; i < arguments.length; i++) {\n      var arg = arguments[i];\n      if (!arg) continue;\n      var argType = typeof arg;\n\n      if (argType === 'string' || argType === 'number') {\n        classes.push(arg);\n      } else if (Array.isArray(arg)) {\n        classes.push(classNames.apply(null, arg));\n      } else if (argType === 'object') {\n        for (var key in arg) {\n          if (hasOwn.call(arg, key) && arg[key]) {\n            classes.push(key);\n          }\n        }\n      }\n    }\n\n    return classes.join(' ');\n  }\n\n  if (typeof module !== 'undefined' && module.exports) {\n    module.exports = classNames;\n  } else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\n    // register as 'classnames', consistent with npm package name\n    define('classnames', [], function () {\n      return classNames;\n    });\n  } else {\n    window.classNames = classNames;\n  }\n})();","map":{"version":3,"sources":["C:/Users/Fabricien/Documents/Projet/Touriste/client/node_modules/classnames/index.js"],"names":["hasOwn","hasOwnProperty","classNames","classes","i","arguments","length","arg","argType","push","Array","isArray","apply","key","call","join","module","exports","define","amd","window"],"mappings":"AAAA;;;;;;AAKA;AAEC,aAAY;AACZ;;AAEA,MAAIA,MAAM,GAAG,GAAGC,cAAhB;;AAEA,WAASC,UAAT,GAAuB;AACtB,QAAIC,OAAO,GAAG,EAAd;;AAEA,SAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGC,SAAS,CAACC,MAA9B,EAAsCF,CAAC,EAAvC,EAA2C;AAC1C,UAAIG,GAAG,GAAGF,SAAS,CAACD,CAAD,CAAnB;AACA,UAAI,CAACG,GAAL,EAAU;AAEV,UAAIC,OAAO,GAAG,OAAOD,GAArB;;AAEA,UAAIC,OAAO,KAAK,QAAZ,IAAwBA,OAAO,KAAK,QAAxC,EAAkD;AACjDL,QAAAA,OAAO,CAACM,IAAR,CAAaF,GAAb;AACA,OAFD,MAEO,IAAIG,KAAK,CAACC,OAAN,CAAcJ,GAAd,CAAJ,EAAwB;AAC9BJ,QAAAA,OAAO,CAACM,IAAR,CAAaP,UAAU,CAACU,KAAX,CAAiB,IAAjB,EAAuBL,GAAvB,CAAb;AACA,OAFM,MAEA,IAAIC,OAAO,KAAK,QAAhB,EAA0B;AAChC,aAAK,IAAIK,GAAT,IAAgBN,GAAhB,EAAqB;AACpB,cAAIP,MAAM,CAACc,IAAP,CAAYP,GAAZ,EAAiBM,GAAjB,KAAyBN,GAAG,CAACM,GAAD,CAAhC,EAAuC;AACtCV,YAAAA,OAAO,CAACM,IAAR,CAAaI,GAAb;AACA;AACD;AACD;AACD;;AAED,WAAOV,OAAO,CAACY,IAAR,CAAa,GAAb,CAAP;AACA;;AAED,MAAI,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,OAA5C,EAAqD;AACpDD,IAAAA,MAAM,CAACC,OAAP,GAAiBf,UAAjB;AACA,GAFD,MAEO,IAAI,OAAOgB,MAAP,KAAkB,UAAlB,IAAgC,OAAOA,MAAM,CAACC,GAAd,KAAsB,QAAtD,IAAkED,MAAM,CAACC,GAA7E,EAAkF;AACxF;AACAD,IAAAA,MAAM,CAAC,YAAD,EAAe,EAAf,EAAmB,YAAY;AACpC,aAAOhB,UAAP;AACA,KAFK,CAAN;AAGA,GALM,MAKA;AACNkB,IAAAA,MAAM,CAAClB,UAAP,GAAoBA,UAApB;AACA;AACD,CAxCA,GAAD","sourcesContent":["/*!\r\n  Copyright (c) 2016 Jed Watson.\r\n  Licensed under the MIT License (MIT), see\r\n  http://jedwatson.github.io/classnames\r\n*/\r\n/* global define */\r\n\r\n(function () {\r\n\t'use strict';\r\n\r\n\tvar hasOwn = {}.hasOwnProperty;\r\n\r\n\tfunction classNames () {\r\n\t\tvar classes = [];\r\n\r\n\t\tfor (var i = 0; i < arguments.length; i++) {\r\n\t\t\tvar arg = arguments[i];\r\n\t\t\tif (!arg) continue;\r\n\r\n\t\t\tvar argType = typeof arg;\r\n\r\n\t\t\tif (argType === 'string' || argType === 'number') {\r\n\t\t\t\tclasses.push(arg);\r\n\t\t\t} else if (Array.isArray(arg)) {\r\n\t\t\t\tclasses.push(classNames.apply(null, arg));\r\n\t\t\t} else if (argType === 'object') {\r\n\t\t\t\tfor (var key in arg) {\r\n\t\t\t\t\tif (hasOwn.call(arg, key) && arg[key]) {\r\n\t\t\t\t\t\tclasses.push(key);\r\n\t\t\t\t\t}\r\n\t\t\t\t}\r\n\t\t\t}\r\n\t\t}\r\n\r\n\t\treturn classes.join(' ');\r\n\t}\r\n\r\n\tif (typeof module !== 'undefined' && module.exports) {\r\n\t\tmodule.exports = classNames;\r\n\t} else if (typeof define === 'function' && typeof define.amd === 'object' && define.amd) {\r\n\t\t// register as 'classnames', consistent with npm package name\r\n\t\tdefine('classnames', [], function () {\r\n\t\t\treturn classNames;\r\n\t\t});\r\n\t} else {\r\n\t\twindow.classNames = classNames;\r\n\t}\r\n}());\r\n"]},"metadata":{},"sourceType":"script"}