{"ast":null,"code":"'use strict';\n\nexports.__esModule = true;\nvar canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\n\nvar addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\n};\n\nvar removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\n};\n\nvar getConfirmation = exports.getConfirmation = function getConfirmation(message, callback) {\n  return callback(window.confirm(message));\n}; // eslint-disable-line no-alert\n\n/**\r\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\r\n *\r\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\r\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\r\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\r\n */\n\n\nvar supportsHistory = exports.supportsHistory = function supportsHistory() {\n  var ua = window.navigator.userAgent;\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\n  return window.history && 'pushState' in window.history;\n};\n/**\r\n * Returns true if browser fires popstate on hash change.\r\n * IE10 and IE11 do not.\r\n */\n\n\nvar supportsPopStateOnHashChange = exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\n  return window.navigator.userAgent.indexOf('Trident') === -1;\n};\n/**\r\n * Returns false if using go(n) with hash history causes a full page reload.\r\n */\n\n\nvar supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\n};\n/**\r\n * Returns true if a given popstate event is an extraneous WebKit event.\r\n * Accounts for the fact that Chrome on iOS fires real popstate events\r\n * containing undefined state when pressing the back button.\r\n */\n\n\nvar isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\n};","map":{"version":3,"sources":["C:/Users/Fabricien/Documents/Projet/Touriste/client/node_modules/history/DOMUtils.js"],"names":["exports","__esModule","canUseDOM","window","document","createElement","addEventListener","node","event","listener","attachEvent","removeEventListener","detachEvent","getConfirmation","message","callback","confirm","supportsHistory","ua","navigator","userAgent","indexOf","history","supportsPopStateOnHashChange","supportsGoWithoutReloadUsingHash","isExtraneousPopstateEvent","state","undefined"],"mappings":"AAAA;;AAEAA,OAAO,CAACC,UAAR,GAAqB,IAArB;AACA,IAAIC,SAAS,GAAGF,OAAO,CAACE,SAAR,GAAoB,CAAC,EAAE,OAAOC,MAAP,KAAkB,WAAlB,IAAiCA,MAAM,CAACC,QAAxC,IAAoDD,MAAM,CAACC,QAAP,CAAgBC,aAAtE,CAArC;;AAEA,IAAIC,gBAAgB,GAAGN,OAAO,CAACM,gBAAR,GAA2B,SAASA,gBAAT,CAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,QAAvC,EAAiD;AACjG,SAAOF,IAAI,CAACD,gBAAL,GAAwBC,IAAI,CAACD,gBAAL,CAAsBE,KAAtB,EAA6BC,QAA7B,EAAuC,KAAvC,CAAxB,GAAwEF,IAAI,CAACG,WAAL,CAAiB,OAAOF,KAAxB,EAA+BC,QAA/B,CAA/E;AACD,CAFD;;AAIA,IAAIE,mBAAmB,GAAGX,OAAO,CAACW,mBAAR,GAA8B,SAASA,mBAAT,CAA6BJ,IAA7B,EAAmCC,KAAnC,EAA0CC,QAA1C,EAAoD;AAC1G,SAAOF,IAAI,CAACI,mBAAL,GAA2BJ,IAAI,CAACI,mBAAL,CAAyBH,KAAzB,EAAgCC,QAAhC,EAA0C,KAA1C,CAA3B,GAA8EF,IAAI,CAACK,WAAL,CAAiB,OAAOJ,KAAxB,EAA+BC,QAA/B,CAArF;AACD,CAFD;;AAIA,IAAII,eAAe,GAAGb,OAAO,CAACa,eAAR,GAA0B,SAASA,eAAT,CAAyBC,OAAzB,EAAkCC,QAAlC,EAA4C;AAC1F,SAAOA,QAAQ,CAACZ,MAAM,CAACa,OAAP,CAAeF,OAAf,CAAD,CAAf;AACD,CAFD,C,CAEG;;AAEH;;;;;;;;;AAOA,IAAIG,eAAe,GAAGjB,OAAO,CAACiB,eAAR,GAA0B,SAASA,eAAT,GAA2B;AACzE,MAAIC,EAAE,GAAGf,MAAM,CAACgB,SAAP,CAAiBC,SAA1B;AAEA,MAAI,CAACF,EAAE,CAACG,OAAH,CAAW,YAAX,MAA6B,CAAC,CAA9B,IAAmCH,EAAE,CAACG,OAAH,CAAW,aAAX,MAA8B,CAAC,CAAnE,KAAyEH,EAAE,CAACG,OAAH,CAAW,eAAX,MAAgC,CAAC,CAA1G,IAA+GH,EAAE,CAACG,OAAH,CAAW,QAAX,MAAyB,CAAC,CAAzI,IAA8IH,EAAE,CAACG,OAAH,CAAW,eAAX,MAAgC,CAAC,CAAnL,EAAsL,OAAO,KAAP;AAEtL,SAAOlB,MAAM,CAACmB,OAAP,IAAkB,eAAenB,MAAM,CAACmB,OAA/C;AACD,CAND;AAQA;;;;;;AAIA,IAAIC,4BAA4B,GAAGvB,OAAO,CAACuB,4BAAR,GAAuC,SAASA,4BAAT,GAAwC;AAChH,SAAOpB,MAAM,CAACgB,SAAP,CAAiBC,SAAjB,CAA2BC,OAA3B,CAAmC,SAAnC,MAAkD,CAAC,CAA1D;AACD,CAFD;AAIA;;;;;AAGA,IAAIG,gCAAgC,GAAGxB,OAAO,CAACwB,gCAAR,GAA2C,SAASA,gCAAT,GAA4C;AAC5H,SAAOrB,MAAM,CAACgB,SAAP,CAAiBC,SAAjB,CAA2BC,OAA3B,CAAmC,SAAnC,MAAkD,CAAC,CAA1D;AACD,CAFD;AAIA;;;;;;;AAKA,IAAII,yBAAyB,GAAGzB,OAAO,CAACyB,yBAAR,GAAoC,SAASA,yBAAT,CAAmCjB,KAAnC,EAA0C;AAC5G,SAAOA,KAAK,CAACkB,KAAN,KAAgBC,SAAhB,IAA6BR,SAAS,CAACC,SAAV,CAAoBC,OAApB,CAA4B,OAA5B,MAAyC,CAAC,CAA9E;AACD,CAFD","sourcesContent":["'use strict';\r\n\r\nexports.__esModule = true;\r\nvar canUseDOM = exports.canUseDOM = !!(typeof window !== 'undefined' && window.document && window.document.createElement);\r\n\r\nvar addEventListener = exports.addEventListener = function addEventListener(node, event, listener) {\r\n  return node.addEventListener ? node.addEventListener(event, listener, false) : node.attachEvent('on' + event, listener);\r\n};\r\n\r\nvar removeEventListener = exports.removeEventListener = function removeEventListener(node, event, listener) {\r\n  return node.removeEventListener ? node.removeEventListener(event, listener, false) : node.detachEvent('on' + event, listener);\r\n};\r\n\r\nvar getConfirmation = exports.getConfirmation = function getConfirmation(message, callback) {\r\n  return callback(window.confirm(message));\r\n}; // eslint-disable-line no-alert\r\n\r\n/**\r\n * Returns true if the HTML5 history API is supported. Taken from Modernizr.\r\n *\r\n * https://github.com/Modernizr/Modernizr/blob/master/LICENSE\r\n * https://github.com/Modernizr/Modernizr/blob/master/feature-detects/history.js\r\n * changed to avoid false negatives for Windows Phones: https://github.com/reactjs/react-router/issues/586\r\n */\r\nvar supportsHistory = exports.supportsHistory = function supportsHistory() {\r\n  var ua = window.navigator.userAgent;\r\n\r\n  if ((ua.indexOf('Android 2.') !== -1 || ua.indexOf('Android 4.0') !== -1) && ua.indexOf('Mobile Safari') !== -1 && ua.indexOf('Chrome') === -1 && ua.indexOf('Windows Phone') === -1) return false;\r\n\r\n  return window.history && 'pushState' in window.history;\r\n};\r\n\r\n/**\r\n * Returns true if browser fires popstate on hash change.\r\n * IE10 and IE11 do not.\r\n */\r\nvar supportsPopStateOnHashChange = exports.supportsPopStateOnHashChange = function supportsPopStateOnHashChange() {\r\n  return window.navigator.userAgent.indexOf('Trident') === -1;\r\n};\r\n\r\n/**\r\n * Returns false if using go(n) with hash history causes a full page reload.\r\n */\r\nvar supportsGoWithoutReloadUsingHash = exports.supportsGoWithoutReloadUsingHash = function supportsGoWithoutReloadUsingHash() {\r\n  return window.navigator.userAgent.indexOf('Firefox') === -1;\r\n};\r\n\r\n/**\r\n * Returns true if a given popstate event is an extraneous WebKit event.\r\n * Accounts for the fact that Chrome on iOS fires real popstate events\r\n * containing undefined state when pressing the back button.\r\n */\r\nvar isExtraneousPopstateEvent = exports.isExtraneousPopstateEvent = function isExtraneousPopstateEvent(event) {\r\n  return event.state === undefined && navigator.userAgent.indexOf('CriOS') === -1;\r\n};"]},"metadata":{},"sourceType":"script"}