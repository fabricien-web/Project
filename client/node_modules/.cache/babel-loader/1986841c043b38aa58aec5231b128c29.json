{"ast":null,"code":"/*\r\n * Copyright 2012-2016 the original author or authors\r\n * @license MIT, see LICENSE.txt for details\r\n *\r\n * @author Scott Andrews\r\n */\n'use strict';\n\nvar encodedSpaceRE, urlEncodedSpaceRE;\nencodedSpaceRE = /%20/g;\nurlEncodedSpaceRE = /\\+/g;\n\nfunction urlEncode(str) {\n  str = encodeURIComponent(str); // spec says space should be encoded as '+'\n\n  return str.replace(encodedSpaceRE, '+');\n}\n\nfunction urlDecode(str) {\n  // spec says space should be encoded as '+'\n  str = str.replace(urlEncodedSpaceRE, ' ');\n  return decodeURIComponent(str);\n}\n\nfunction append(str, name, value) {\n  if (Array.isArray(value)) {\n    value.forEach(function (value) {\n      str = append(str, name, value);\n    });\n  } else {\n    if (str.length > 0) {\n      str += '&';\n    }\n\n    str += urlEncode(name);\n\n    if (value !== undefined && value !== null) {\n      str += '=' + urlEncode(value);\n    }\n  }\n\n  return str;\n}\n\nmodule.exports = {\n  read: function (str) {\n    var obj = {};\n    str.split('&').forEach(function (entry) {\n      var pair, name, value;\n      pair = entry.split('=');\n      name = urlDecode(pair[0]);\n\n      if (pair.length === 2) {\n        value = urlDecode(pair[1]);\n      } else {\n        value = null;\n      }\n\n      if (name in obj) {\n        if (!Array.isArray(obj[name])) {\n          // convert to an array, perserving currnent value\n          obj[name] = [obj[name]];\n        }\n\n        obj[name].push(value);\n      } else {\n        obj[name] = value;\n      }\n    });\n    return obj;\n  },\n  write: function (obj) {\n    var str = '';\n    Object.keys(obj).forEach(function (name) {\n      str = append(str, name, obj[name]);\n    });\n    return str;\n  }\n};","map":{"version":3,"sources":["C:/Users/Fabricien/Documents/Projet/Touriste/client/node_modules/rest/mime/type/application/x-www-form-urlencoded.js"],"names":["encodedSpaceRE","urlEncodedSpaceRE","urlEncode","str","encodeURIComponent","replace","urlDecode","decodeURIComponent","append","name","value","Array","isArray","forEach","length","undefined","module","exports","read","obj","split","entry","pair","push","write","Object","keys"],"mappings":"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","sourcesContent":["/*\r\n * Copyright 2012-2016 the original author or authors\r\n * @license MIT, see LICENSE.txt for details\r\n *\r\n * @author Scott Andrews\r\n */\r\n\r\n'use strict';\r\n\r\nvar encodedSpaceRE, urlEncodedSpaceRE;\r\n\r\nencodedSpaceRE = /%20/g;\r\nurlEncodedSpaceRE = /\\+/g;\r\n\r\nfunction urlEncode(str) {\r\n\tstr = encodeURIComponent(str);\r\n\t// spec says space should be encoded as '+'\r\n\treturn str.replace(encodedSpaceRE, '+');\r\n}\r\n\r\nfunction urlDecode(str) {\r\n\t// spec says space should be encoded as '+'\r\n\tstr = str.replace(urlEncodedSpaceRE, ' ');\r\n\treturn decodeURIComponent(str);\r\n}\r\n\r\nfunction append(str, name, value) {\r\n\tif (Array.isArray(value)) {\r\n\t\tvalue.forEach(function (value) {\r\n\t\t\tstr = append(str, name, value);\r\n\t\t});\r\n\t}\r\n\telse {\r\n\t\tif (str.length > 0) {\r\n\t\t\tstr += '&';\r\n\t\t}\r\n\t\tstr += urlEncode(name);\r\n\t\tif (value !== undefined && value !== null) {\r\n\t\t\tstr += '=' + urlEncode(value);\r\n\t\t}\r\n\t}\r\n\treturn str;\r\n}\r\n\r\nmodule.exports = {\r\n\r\n\tread: function (str) {\r\n\t\tvar obj = {};\r\n\t\tstr.split('&').forEach(function (entry) {\r\n\t\t\tvar pair, name, value;\r\n\t\t\tpair = entry.split('=');\r\n\t\t\tname = urlDecode(pair[0]);\r\n\t\t\tif (pair.length === 2) {\r\n\t\t\t\tvalue = urlDecode(pair[1]);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tvalue = null;\r\n\t\t\t}\r\n\t\t\tif (name in obj) {\r\n\t\t\t\tif (!Array.isArray(obj[name])) {\r\n\t\t\t\t\t// convert to an array, perserving currnent value\r\n\t\t\t\t\tobj[name] = [obj[name]];\r\n\t\t\t\t}\r\n\t\t\t\tobj[name].push(value);\r\n\t\t\t}\r\n\t\t\telse {\r\n\t\t\t\tobj[name] = value;\r\n\t\t\t}\r\n\t\t});\r\n\t\treturn obj;\r\n\t},\r\n\r\n\twrite: function (obj) {\r\n\t\tvar str = '';\r\n\t\tObject.keys(obj).forEach(function (name) {\r\n\t\t\tstr = append(str, name, obj[name]);\r\n\t\t});\r\n\t\treturn str;\r\n\t}\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"script"}