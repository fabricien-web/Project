{"ast":null,"code":"/*\r\n * Copyright 2016 the original author or authors\r\n * @license MIT, see LICENSE.txt for details\r\n *\r\n * @author Scott Andrews\r\n */\n'use strict';\n\nvar interceptor, UrlBuilder;\ninterceptor = require('../interceptor');\nUrlBuilder = require('../UrlBuilder');\n/**\r\n * Applies request params to the path by token replacement\r\n *\r\n * Params not applied as a token are appended to the query string. Params\r\n * are removed from the request object, as they have been consumed.\r\n *\r\n * @deprecated The template interceptor `rest/interceptor/template` is a\r\n * much richer way to apply paramters to a template. This interceptor is\r\n * available as a bridge to users who previousled depended on this\r\n * functionality being available directly on clients.\r\n *\r\n * @param {Client} [client] client to wrap\r\n * @param {Object} [config.params] default param values\r\n *\r\n * @returns {Client}\r\n */\n\nmodule.exports = interceptor({\n  init: function (config) {\n    config.params = config.params || {};\n    return config;\n  },\n  request: function (request, config) {\n    var path, params;\n    path = request.path || '';\n    params = request.params || {};\n    request.path = new UrlBuilder(path, config.params).append('', params).build();\n    delete request.params;\n    return request;\n  }\n});","map":{"version":3,"sources":["C:/Users/Fabricien/Documents/Projet/Touriste/client/node_modules/rest/interceptor/params.js"],"names":["interceptor","UrlBuilder","require","module","exports","init","config","params","request","path","append","build"],"mappings":"AAAA;;;;;;AAOA;;AAEA,IAAIA,WAAJ,EAAiBC,UAAjB;AAEAD,WAAW,GAAGE,OAAO,CAAC,gBAAD,CAArB;AACAD,UAAU,GAAGC,OAAO,CAAC,eAAD,CAApB;AAEA;;;;;;;;;;;;;;;;;AAgBAC,MAAM,CAACC,OAAP,GAAiBJ,WAAW,CAAC;AAC5BK,EAAAA,IAAI,EAAE,UAAUC,MAAV,EAAkB;AACvBA,IAAAA,MAAM,CAACC,MAAP,GAAgBD,MAAM,CAACC,MAAP,IAAiB,EAAjC;AACA,WAAOD,MAAP;AACA,GAJ2B;AAK5BE,EAAAA,OAAO,EAAE,UAAUA,OAAV,EAAmBF,MAAnB,EAA2B;AACnC,QAAIG,IAAJ,EAAUF,MAAV;AAEAE,IAAAA,IAAI,GAAGD,OAAO,CAACC,IAAR,IAAgB,EAAvB;AACAF,IAAAA,MAAM,GAAGC,OAAO,CAACD,MAAR,IAAkB,EAA3B;AAEAC,IAAAA,OAAO,CAACC,IAAR,GAAe,IAAIR,UAAJ,CAAeQ,IAAf,EAAqBH,MAAM,CAACC,MAA5B,EAAoCG,MAApC,CAA2C,EAA3C,EAA+CH,MAA/C,EAAuDI,KAAvD,EAAf;AACA,WAAOH,OAAO,CAACD,MAAf;AAEA,WAAOC,OAAP;AACA;AAf2B,CAAD,CAA5B","sourcesContent":["/*\r\n * Copyright 2016 the original author or authors\r\n * @license MIT, see LICENSE.txt for details\r\n *\r\n * @author Scott Andrews\r\n */\r\n\r\n'use strict';\r\n\r\nvar interceptor, UrlBuilder;\r\n\r\ninterceptor = require('../interceptor');\r\nUrlBuilder = require('../UrlBuilder');\r\n\r\n/**\r\n * Applies request params to the path by token replacement\r\n *\r\n * Params not applied as a token are appended to the query string. Params\r\n * are removed from the request object, as they have been consumed.\r\n *\r\n * @deprecated The template interceptor `rest/interceptor/template` is a\r\n * much richer way to apply paramters to a template. This interceptor is\r\n * available as a bridge to users who previousled depended on this\r\n * functionality being available directly on clients.\r\n *\r\n * @param {Client} [client] client to wrap\r\n * @param {Object} [config.params] default param values\r\n *\r\n * @returns {Client}\r\n */\r\nmodule.exports = interceptor({\r\n\tinit: function (config) {\r\n\t\tconfig.params = config.params || {};\r\n\t\treturn config;\r\n\t},\r\n\trequest: function (request, config) {\r\n\t\tvar path, params;\r\n\r\n\t\tpath = request.path || '';\r\n\t\tparams = request.params || {};\r\n\r\n\t\trequest.path = new UrlBuilder(path, config.params).append('', params).build();\r\n\t\tdelete request.params;\r\n\r\n\t\treturn request;\r\n\t}\r\n});\r\n"]},"metadata":{},"sourceType":"script"}