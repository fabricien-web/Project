{"ast":null,"code":"/*\r\n * Copyright 2012-2016 the original author or authors\r\n * @license MIT, see LICENSE.txt for details\r\n *\r\n * @author Scott Andrews\r\n */\n'use strict';\n\nvar empty = {};\n/**\r\n * Mix the properties from the source object into the destination object.\r\n * When the same property occurs in more then one object, the right most\r\n * value wins.\r\n *\r\n * @param {Object} dest the object to copy properties to\r\n * @param {Object} sources the objects to copy properties from.  May be 1 to N arguments, but not an Array.\r\n * @return {Object} the destination object\r\n */\n\nfunction mixin(dest\n/*, sources... */\n) {\n  var i, l, source, name;\n\n  if (!dest) {\n    dest = {};\n  }\n\n  for (i = 1, l = arguments.length; i < l; i += 1) {\n    source = arguments[i];\n\n    for (name in source) {\n      if (!(name in dest) || dest[name] !== source[name] && (!(name in empty) || empty[name] !== source[name])) {\n        dest[name] = source[name];\n      }\n    }\n  }\n\n  return dest; // Object\n}\n\nmodule.exports = mixin;","map":{"version":3,"sources":["C:/Users/Fabricien/Documents/Projet/fabTravel/client/node_modules/rest/util/mixin.js"],"names":["empty","mixin","dest","i","l","source","name","arguments","length","module","exports"],"mappings":"AAAA;;;;;;AAOA;;AAEA,IAAIA,KAAK,GAAG,EAAZ;AAEA;;;;;;;;;;AASA,SAASC,KAAT,CAAeC;AAAK;AAApB,EAAuC;AACtC,MAAIC,CAAJ,EAAOC,CAAP,EAAUC,MAAV,EAAkBC,IAAlB;;AAEA,MAAI,CAACJ,IAAL,EAAW;AAAEA,IAAAA,IAAI,GAAG,EAAP;AAAY;;AACzB,OAAKC,CAAC,GAAG,CAAJ,EAAOC,CAAC,GAAGG,SAAS,CAACC,MAA1B,EAAkCL,CAAC,GAAGC,CAAtC,EAAyCD,CAAC,IAAI,CAA9C,EAAiD;AAChDE,IAAAA,MAAM,GAAGE,SAAS,CAACJ,CAAD,CAAlB;;AACA,SAAKG,IAAL,IAAaD,MAAb,EAAqB;AACpB,UAAI,EAAEC,IAAI,IAAIJ,IAAV,KAAoBA,IAAI,CAACI,IAAD,CAAJ,KAAeD,MAAM,CAACC,IAAD,CAArB,KAAgC,EAAEA,IAAI,IAAIN,KAAV,KAAoBA,KAAK,CAACM,IAAD,CAAL,KAAgBD,MAAM,CAACC,IAAD,CAA1E,CAAxB,EAA4G;AAC3GJ,QAAAA,IAAI,CAACI,IAAD,CAAJ,GAAaD,MAAM,CAACC,IAAD,CAAnB;AACA;AACD;AACD;;AAED,SAAOJ,IAAP,CAbsC,CAazB;AACb;;AAEDO,MAAM,CAACC,OAAP,GAAiBT,KAAjB","sourcesContent":["/*\r\n * Copyright 2012-2016 the original author or authors\r\n * @license MIT, see LICENSE.txt for details\r\n *\r\n * @author Scott Andrews\r\n */\r\n\r\n'use strict';\r\n\r\nvar empty = {};\r\n\r\n/**\r\n * Mix the properties from the source object into the destination object.\r\n * When the same property occurs in more then one object, the right most\r\n * value wins.\r\n *\r\n * @param {Object} dest the object to copy properties to\r\n * @param {Object} sources the objects to copy properties from.  May be 1 to N arguments, but not an Array.\r\n * @return {Object} the destination object\r\n */\r\nfunction mixin(dest /*, sources... */) {\r\n\tvar i, l, source, name;\r\n\r\n\tif (!dest) { dest = {}; }\r\n\tfor (i = 1, l = arguments.length; i < l; i += 1) {\r\n\t\tsource = arguments[i];\r\n\t\tfor (name in source) {\r\n\t\t\tif (!(name in dest) || (dest[name] !== source[name] && (!(name in empty) || empty[name] !== source[name]))) {\r\n\t\t\t\tdest[name] = source[name];\r\n\t\t\t}\r\n\t\t}\r\n\t}\r\n\r\n\treturn dest; // Object\r\n}\r\n\r\nmodule.exports = mixin;\r\n"]},"metadata":{},"sourceType":"script"}