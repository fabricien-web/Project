{"ast":null,"code":"/*\r\n* Copyright 2014-2016 the original author or authors\r\n* @license MIT, see LICENSE.txt for details\r\n*\r\n* @author Scott Andrews\r\n*/\n'use strict';\n/**\r\n * Parse a MIME type into it's constituent parts\r\n *\r\n * @param {string} mime MIME type to parse\r\n * @return {{\r\n *   {string} raw the original MIME type\r\n *   {string} type the type and subtype\r\n *   {string} [suffix] mime suffix, including the plus, if any\r\n *   {Object} params key/value pair of attributes\r\n * }}\r\n */\n\nfunction parse(mime) {\n  var params, type;\n  params = mime.split(';');\n  type = params[0].trim().split('+');\n  return {\n    raw: mime,\n    type: type[0],\n    suffix: type[1] ? '+' + type[1] : '',\n    params: params.slice(1).reduce(function (params, pair) {\n      pair = pair.split('=');\n      params[pair[0].trim()] = pair[1] ? pair[1].trim() : void 0;\n      return params;\n    }, {})\n  };\n}\n\nmodule.exports = {\n  parse: parse\n};","map":{"version":3,"sources":["C:/Users/Fabricien/Documents/Projet/Touriste/client/node_modules/rest/mime.js"],"names":["parse","mime","params","type","split","trim","raw","suffix","slice","reduce","pair","module","exports"],"mappings":"AAAA;;;;;;AAOA;AAEA;;;;;;;;;;;;AAWA,SAASA,KAAT,CAAeC,IAAf,EAAqB;AACpB,MAAIC,MAAJ,EAAYC,IAAZ;AAEAD,EAAAA,MAAM,GAAGD,IAAI,CAACG,KAAL,CAAW,GAAX,CAAT;AACAD,EAAAA,IAAI,GAAGD,MAAM,CAAC,CAAD,CAAN,CAAUG,IAAV,GAAiBD,KAAjB,CAAuB,GAAvB,CAAP;AAEA,SAAO;AACNE,IAAAA,GAAG,EAAEL,IADC;AAENE,IAAAA,IAAI,EAAEA,IAAI,CAAC,CAAD,CAFJ;AAGNI,IAAAA,MAAM,EAAEJ,IAAI,CAAC,CAAD,CAAJ,GAAU,MAAMA,IAAI,CAAC,CAAD,CAApB,GAA0B,EAH5B;AAIND,IAAAA,MAAM,EAAEA,MAAM,CAACM,KAAP,CAAa,CAAb,EAAgBC,MAAhB,CAAuB,UAAUP,MAAV,EAAkBQ,IAAlB,EAAwB;AACtDA,MAAAA,IAAI,GAAGA,IAAI,CAACN,KAAL,CAAW,GAAX,CAAP;AACAF,MAAAA,MAAM,CAACQ,IAAI,CAAC,CAAD,CAAJ,CAAQL,IAAR,EAAD,CAAN,GAAyBK,IAAI,CAAC,CAAD,CAAJ,GAAUA,IAAI,CAAC,CAAD,CAAJ,CAAQL,IAAR,EAAV,GAA2B,KAAK,CAAzD;AACA,aAAOH,MAAP;AACA,KAJO,EAIL,EAJK;AAJF,GAAP;AAUA;;AAEDS,MAAM,CAACC,OAAP,GAAiB;AAChBZ,EAAAA,KAAK,EAAEA;AADS,CAAjB","sourcesContent":["/*\r\n* Copyright 2014-2016 the original author or authors\r\n* @license MIT, see LICENSE.txt for details\r\n*\r\n* @author Scott Andrews\r\n*/\r\n\r\n'use strict';\r\n\r\n/**\r\n * Parse a MIME type into it's constituent parts\r\n *\r\n * @param {string} mime MIME type to parse\r\n * @return {{\r\n *   {string} raw the original MIME type\r\n *   {string} type the type and subtype\r\n *   {string} [suffix] mime suffix, including the plus, if any\r\n *   {Object} params key/value pair of attributes\r\n * }}\r\n */\r\nfunction parse(mime) {\r\n\tvar params, type;\r\n\r\n\tparams = mime.split(';');\r\n\ttype = params[0].trim().split('+');\r\n\r\n\treturn {\r\n\t\traw: mime,\r\n\t\ttype: type[0],\r\n\t\tsuffix: type[1] ? '+' + type[1] : '',\r\n\t\tparams: params.slice(1).reduce(function (params, pair) {\r\n\t\t\tpair = pair.split('=');\r\n\t\t\tparams[pair[0].trim()] = pair[1] ? pair[1].trim() : void 0;\r\n\t\t\treturn params;\r\n\t\t}, {})\r\n\t};\r\n}\r\n\r\nmodule.exports = {\r\n\tparse: parse\r\n};\r\n"]},"metadata":{},"sourceType":"script"}