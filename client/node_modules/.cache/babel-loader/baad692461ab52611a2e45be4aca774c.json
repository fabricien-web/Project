{"ast":null,"code":"'use strict';\n\nvar Typeahead = require('suggestions');\n\nvar debounce = require('lodash.debounce');\n\nvar extend = require('xtend');\n\nvar EventEmitter = require('events').EventEmitter;\n\nvar exceptions = require('./exceptions');\n\nvar MapboxClient = require('mapbox/lib/services/geocoding');\n/**\r\n * A geocoder component using Mapbox Geocoding API\r\n * @class MapboxGeocoder\r\n *\r\n * @param {Object} options\r\n * @param {String} [options.accessToken=null] Required unless `mapboxgl.accessToken` is set globally\r\n * @param {Number} [options.zoom=16] On geocoded result what zoom level should the map animate to.\r\n * @param {Boolean} [options.flyTo=true] If false, animating the map to a selected result is disabled.\r\n * @param {String} [options.placeholder=\"Search\"] Override the default placeholder attribute value.\r\n * @example\r\n * var geocoder = new MapboxGeocoder();\r\n * map.addControl(geocoder);\r\n * @return {MapboxGeocoder} `this`\r\n */\n\n\nfunction MapboxGeocoder(options) {\n  this._eventEmitter = new EventEmitter();\n  this.options = extend({}, this.options, options);\n}\n\nMapboxGeocoder.prototype = {\n  options: {\n    placeholder: 'Search',\n    zoom: 16,\n    flyTo: true\n  },\n  onAdd: function (map) {\n    this._map = map;\n    this.mapboxClient = new MapboxClient(this.options.accessToken);\n    this._onChange = this._onChange.bind(this);\n    this._onKeyDown = this._onKeyDown.bind(this);\n    this._onQueryResult = this._onQueryResult.bind(this);\n    this._clear = this._clear.bind(this);\n    var el = this.container = document.createElement('div');\n    el.className = 'mapboxgl-ctrl-geocoder mapboxgl-ctrl';\n    var icon = document.createElement('span');\n    icon.className = 'geocoder-icon geocoder-icon-search';\n    this._inputEl = document.createElement('input');\n    this._inputEl.type = 'text';\n    this._inputEl.placeholder = this.options.placeholder;\n\n    this._inputEl.addEventListener('keydown', this._onKeyDown);\n\n    this._inputEl.addEventListener('change', this._onChange);\n\n    var actions = document.createElement('div');\n    actions.classList.add('geocoder-pin-right');\n    this._clearEl = document.createElement('button');\n    this._clearEl.className = 'geocoder-icon geocoder-icon-close';\n\n    this._clearEl.addEventListener('click', this._clear);\n\n    this._loadingEl = document.createElement('span');\n    this._loadingEl.className = 'geocoder-icon geocoder-icon-loading';\n    actions.appendChild(this._clearEl);\n    actions.appendChild(this._loadingEl);\n    el.appendChild(icon);\n    el.appendChild(this._inputEl);\n    el.appendChild(actions);\n    this._typeahead = new Typeahead(this._inputEl, [], {\n      filter: false\n    });\n\n    this._typeahead.getItemValue = function (item) {\n      return item.place_name;\n    };\n\n    return el;\n  },\n  onRemove: function () {\n    this.container.parentNode.removeChild(this.container);\n    this._map = null;\n    return this;\n  },\n  _onKeyDown: debounce(function (e) {\n    if (!e.target.value) {\n      return this._clearEl.style.display = 'none';\n    } // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\n\n\n    if (e.metaKey || [9, 27, 37, 39, 13, 38, 40].indexOf(e.keyCode) !== -1) return;\n\n    this._geocode(e.target.value);\n  }, 200),\n  _onChange: function () {\n    if (this._inputEl.value) this._clearEl.style.display = 'block';\n    var selected = this._typeahead.selected;\n\n    if (selected) {\n      if (this.options.flyTo) {\n        if (!exceptions[selected.id] && (selected.bbox && selected.context && selected.context.length <= 3 || selected.bbox && !selected.context)) {\n          var bbox = selected.bbox;\n\n          this._map.fitBounds([[bbox[0], bbox[1]], [bbox[2], bbox[3]]]);\n        } else if (exceptions[selected.id]) {\n          // Certain geocoder search results return (and therefore zoom to fit)\n          // an unexpectedly large bounding box: for example, both Russia and the\n          // USA span both sides of -180/180, or France includes the island of\n          // Reunion in the Indian Ocean. An incomplete list of these exceptions\n          // at ./exceptions.json provides \"reasonable\" bounding boxes as a\n          // short-term solution; this may be amended as necessary.\n          this._map.fitBounds(exceptions[selected.id].bbox);\n        } else {\n          this._map.flyTo({\n            center: selected.center,\n            zoom: this.options.zoom\n          });\n        }\n      }\n\n      this._eventEmitter.emit('result', {\n        result: selected\n      });\n    }\n  },\n  _geocode: function (searchInput) {\n    this._loadingEl.style.display = 'block';\n\n    this._eventEmitter.emit('loading');\n\n    var request = this.mapboxClient.geocodeForward(searchInput, this.options);\n    request.then(function (response) {\n      this._loadingEl.style.display = 'none';\n      var res = response.entity;\n\n      if (res.features.length) {\n        this._clearEl.style.display = 'block';\n      } else {\n        this._clearEl.style.display = 'none';\n        this._typeahead.selected = null;\n      }\n\n      this._eventEmitter.emit('results', res);\n\n      this._typeahead.update(res.features);\n    }.bind(this));\n    request.catch(function (err) {\n      this._loadingEl.style.display = 'none';\n\n      this._eventEmitter.emit('error', {\n        error: err\n      });\n    }.bind(this));\n    return request;\n  },\n  _clear: function () {\n    this._inputEl.value = '';\n    this._typeahead.selected = null;\n\n    this._typeahead.clear();\n\n    this._onChange();\n\n    this._inputEl.focus();\n\n    this._clearEl.style.display = 'none';\n\n    this._eventEmitter.emit('clear');\n  },\n  _onQueryResult: function (response) {\n    var results = response.entity;\n    if (!results.features.length) return;\n    var result = results.features[0];\n    this._typeahead.selected = result;\n    this._inputEl.value = result.place_name;\n\n    this._onChange();\n  },\n\n  /**\r\n   * Set & query the input\r\n   * @param {string} searchInput location name or other search input\r\n   * @returns {MapboxGeocoder} this\r\n   */\n  query: function (searchInput) {\n    this._geocode(searchInput).then(this._onQueryResult);\n\n    return this;\n  },\n\n  /**\r\n   * Set input\r\n   * @param {string} searchInput location name or other search input\r\n   * @returns {MapboxGeocoder} this\r\n   */\n  setInput: function (searchInput) {\n    // Set input value to passed value and clear everything else.\n    this._inputEl.value = searchInput;\n    this._typeahead.selected = null;\n\n    this._typeahead.clear();\n\n    this._onChange();\n\n    return this;\n  },\n\n  /**\r\n   * Subscribe to events that happen within the plugin.\r\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\r\n   *\r\n   * - __clear__ `Emitted when the input is cleared`\r\n   * - __loading__ `Emitted when the geocoder is looking up a query`\r\n   * - __results__ `{ results } Fired when the geocoder returns a response`\r\n   * - __result__ `{ result } Fired when input is set`\r\n   * - __error__ `{ error } Error as string\r\n   * @param {Function} fn function that's called when the event is emitted.\r\n   * @returns {MapboxGeocoder} this;\r\n   */\n  on: function (type, fn) {\n    this._eventEmitter.on(type, fn);\n\n    return this;\n  },\n\n  /**\r\n   * Remove an event\r\n   * @returns {MapboxGeocoder} this\r\n   * @param {String} type Event name.\r\n   * @param {Function} fn Function that should unsubscribe to the event emitted.\r\n   */\n  off: function (type, fn) {\n    this._eventEmitter.removeListener(type, fn);\n\n    return this;\n  }\n};\nmodule.exports = MapboxGeocoder;","map":{"version":3,"sources":["C:/Users/Fabricien/Documents/Projet/Touriste/client/node_modules/mapbox-gl-geocoder/lib/index.js"],"names":["Typeahead","require","debounce","extend","EventEmitter","exceptions","MapboxClient","MapboxGeocoder","options","_eventEmitter","prototype","placeholder","zoom","flyTo","onAdd","map","_map","mapboxClient","accessToken","_onChange","bind","_onKeyDown","_onQueryResult","_clear","el","container","document","createElement","className","icon","_inputEl","type","addEventListener","actions","classList","add","_clearEl","_loadingEl","appendChild","_typeahead","filter","getItemValue","item","place_name","onRemove","parentNode","removeChild","e","target","value","style","display","metaKey","indexOf","keyCode","_geocode","selected","id","bbox","context","length","fitBounds","center","emit","result","searchInput","request","geocodeForward","then","response","res","entity","features","update","catch","err","error","clear","focus","results","query","setInput","on","fn","off","removeListener","module","exports"],"mappings":"AAAA;;AAEA,IAAIA,SAAS,GAAGC,OAAO,CAAC,aAAD,CAAvB;;AACA,IAAIC,QAAQ,GAAGD,OAAO,CAAC,iBAAD,CAAtB;;AACA,IAAIE,MAAM,GAAGF,OAAO,CAAC,OAAD,CAApB;;AACA,IAAIG,YAAY,GAAGH,OAAO,CAAC,QAAD,CAAP,CAAkBG,YAArC;;AACA,IAAIC,UAAU,GAAGJ,OAAO,CAAC,cAAD,CAAxB;;AACA,IAAIK,YAAY,GAAGL,OAAO,CAAC,+BAAD,CAA1B;AAEA;;;;;;;;;;;;;;;;AAcA,SAASM,cAAT,CAAwBC,OAAxB,EAAiC;AAC/B,OAAKC,aAAL,GAAqB,IAAIL,YAAJ,EAArB;AACA,OAAKI,OAAL,GAAeL,MAAM,CAAC,EAAD,EAAK,KAAKK,OAAV,EAAmBA,OAAnB,CAArB;AACD;;AAEDD,cAAc,CAACG,SAAf,GAA2B;AAEzBF,EAAAA,OAAO,EAAE;AACPG,IAAAA,WAAW,EAAE,QADN;AAEPC,IAAAA,IAAI,EAAE,EAFC;AAGPC,IAAAA,KAAK,EAAE;AAHA,GAFgB;AAQzBC,EAAAA,KAAK,EAAE,UAASC,GAAT,EAAc;AACnB,SAAKC,IAAL,GAAYD,GAAZ;AACA,SAAKE,YAAL,GAAoB,IAAIX,YAAJ,CAAiB,KAAKE,OAAL,CAAaU,WAA9B,CAApB;AACA,SAAKC,SAAL,GAAiB,KAAKA,SAAL,CAAeC,IAAf,CAAoB,IAApB,CAAjB;AACA,SAAKC,UAAL,GAAkB,KAAKA,UAAL,CAAgBD,IAAhB,CAAqB,IAArB,CAAlB;AACA,SAAKE,cAAL,GAAsB,KAAKA,cAAL,CAAoBF,IAApB,CAAyB,IAAzB,CAAtB;AACA,SAAKG,MAAL,GAAc,KAAKA,MAAL,CAAYH,IAAZ,CAAiB,IAAjB,CAAd;AAEA,QAAII,EAAE,GAAG,KAAKC,SAAL,GAAiBC,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAA1B;AACAH,IAAAA,EAAE,CAACI,SAAH,GAAe,sCAAf;AAEA,QAAIC,IAAI,GAAGH,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAX;AACAE,IAAAA,IAAI,CAACD,SAAL,GAAiB,oCAAjB;AAEA,SAAKE,QAAL,GAAgBJ,QAAQ,CAACC,aAAT,CAAuB,OAAvB,CAAhB;AACA,SAAKG,QAAL,CAAcC,IAAd,GAAqB,MAArB;AACA,SAAKD,QAAL,CAAcnB,WAAd,GAA4B,KAAKH,OAAL,CAAaG,WAAzC;;AAEA,SAAKmB,QAAL,CAAcE,gBAAd,CAA+B,SAA/B,EAA0C,KAAKX,UAA/C;;AACA,SAAKS,QAAL,CAAcE,gBAAd,CAA+B,QAA/B,EAAyC,KAAKb,SAA9C;;AAEA,QAAIc,OAAO,GAAGP,QAAQ,CAACC,aAAT,CAAuB,KAAvB,CAAd;AACAM,IAAAA,OAAO,CAACC,SAAR,CAAkBC,GAAlB,CAAsB,oBAAtB;AAEA,SAAKC,QAAL,GAAgBV,QAAQ,CAACC,aAAT,CAAuB,QAAvB,CAAhB;AACA,SAAKS,QAAL,CAAcR,SAAd,GAA0B,mCAA1B;;AACA,SAAKQ,QAAL,CAAcJ,gBAAd,CAA+B,OAA/B,EAAwC,KAAKT,MAA7C;;AAEA,SAAKc,UAAL,GAAkBX,QAAQ,CAACC,aAAT,CAAuB,MAAvB,CAAlB;AACA,SAAKU,UAAL,CAAgBT,SAAhB,GAA4B,qCAA5B;AAEAK,IAAAA,OAAO,CAACK,WAAR,CAAoB,KAAKF,QAAzB;AACAH,IAAAA,OAAO,CAACK,WAAR,CAAoB,KAAKD,UAAzB;AAEAb,IAAAA,EAAE,CAACc,WAAH,CAAeT,IAAf;AACAL,IAAAA,EAAE,CAACc,WAAH,CAAe,KAAKR,QAApB;AACAN,IAAAA,EAAE,CAACc,WAAH,CAAeL,OAAf;AAEA,SAAKM,UAAL,GAAkB,IAAIvC,SAAJ,CAAc,KAAK8B,QAAnB,EAA6B,EAA7B,EAAiC;AAAEU,MAAAA,MAAM,EAAE;AAAV,KAAjC,CAAlB;;AACA,SAAKD,UAAL,CAAgBE,YAAhB,GAA+B,UAASC,IAAT,EAAe;AAAE,aAAOA,IAAI,CAACC,UAAZ;AAAyB,KAAzE;;AAEA,WAAOnB,EAAP;AACD,GAlDwB;AAoDzBoB,EAAAA,QAAQ,EAAE,YAAW;AACnB,SAAKnB,SAAL,CAAeoB,UAAf,CAA0BC,WAA1B,CAAsC,KAAKrB,SAA3C;AACA,SAAKT,IAAL,GAAY,IAAZ;AACA,WAAO,IAAP;AACD,GAxDwB;AA0DzBK,EAAAA,UAAU,EAAEnB,QAAQ,CAAC,UAAS6C,CAAT,EAAY;AAC/B,QAAI,CAACA,CAAC,CAACC,MAAF,CAASC,KAAd,EAAqB;AACnB,aAAO,KAAKb,QAAL,CAAcc,KAAd,CAAoBC,OAApB,GAA8B,MAArC;AACD,KAH8B,CAK/B;;;AACA,QAAIJ,CAAC,CAACK,OAAF,IAAa,CAAC,CAAD,EAAI,EAAJ,EAAQ,EAAR,EAAY,EAAZ,EAAgB,EAAhB,EAAoB,EAApB,EAAwB,EAAxB,EAA4BC,OAA5B,CAAoCN,CAAC,CAACO,OAAtC,MAAmD,CAAC,CAArE,EAAwE;;AACxE,SAAKC,QAAL,CAAcR,CAAC,CAACC,MAAF,CAASC,KAAvB;AACD,GARmB,EAQjB,GARiB,CA1DK;AAoEzB9B,EAAAA,SAAS,EAAE,YAAW;AACpB,QAAI,KAAKW,QAAL,CAAcmB,KAAlB,EAAyB,KAAKb,QAAL,CAAcc,KAAd,CAAoBC,OAApB,GAA8B,OAA9B;AACzB,QAAIK,QAAQ,GAAG,KAAKjB,UAAL,CAAgBiB,QAA/B;;AACA,QAAIA,QAAJ,EAAc;AACZ,UAAI,KAAKhD,OAAL,CAAaK,KAAjB,EAAwB;AACtB,YAAI,CAACR,UAAU,CAACmD,QAAQ,CAACC,EAAV,CAAX,KACCD,QAAQ,CAACE,IAAT,IAAiBF,QAAQ,CAACG,OAA1B,IAAqCH,QAAQ,CAACG,OAAT,CAAiBC,MAAjB,IAA2B,CAAhE,IACDJ,QAAQ,CAACE,IAAT,IAAiB,CAACF,QAAQ,CAACG,OAF3B,CAAJ,EAEyC;AACvC,cAAID,IAAI,GAAGF,QAAQ,CAACE,IAApB;;AACA,eAAK1C,IAAL,CAAU6C,SAAV,CAAoB,CAAC,CAACH,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAAD,EAAoB,CAACA,IAAI,CAAC,CAAD,CAAL,EAAUA,IAAI,CAAC,CAAD,CAAd,CAApB,CAApB;AACD,SALD,MAKO,IAAIrD,UAAU,CAACmD,QAAQ,CAACC,EAAV,CAAd,EAA6B;AAClC;AACA;AACA;AACA;AACA;AACA;AACA,eAAKzC,IAAL,CAAU6C,SAAV,CAAoBxD,UAAU,CAACmD,QAAQ,CAACC,EAAV,CAAV,CAAwBC,IAA5C;AACD,SARM,MAQA;AACL,eAAK1C,IAAL,CAAUH,KAAV,CAAgB;AACdiD,YAAAA,MAAM,EAAEN,QAAQ,CAACM,MADH;AAEdlD,YAAAA,IAAI,EAAE,KAAKJ,OAAL,CAAaI;AAFL,WAAhB;AAID;AACF;;AACD,WAAKH,aAAL,CAAmBsD,IAAnB,CAAwB,QAAxB,EAAkC;AAAEC,QAAAA,MAAM,EAAER;AAAV,OAAlC;AACD;AACF,GA/FwB;AAiGzBD,EAAAA,QAAQ,EAAE,UAASU,WAAT,EAAsB;AAC9B,SAAK5B,UAAL,CAAgBa,KAAhB,CAAsBC,OAAtB,GAAgC,OAAhC;;AACA,SAAK1C,aAAL,CAAmBsD,IAAnB,CAAwB,SAAxB;;AACA,QAAIG,OAAO,GAAG,KAAKjD,YAAL,CAAkBkD,cAAlB,CAAiCF,WAAjC,EAA8C,KAAKzD,OAAnD,CAAd;AAEA0D,IAAAA,OAAO,CAACE,IAAR,CAAa,UAAUC,QAAV,EAAoB;AAC/B,WAAKhC,UAAL,CAAgBa,KAAhB,CAAsBC,OAAtB,GAAgC,MAAhC;AACA,UAAImB,GAAG,GAAGD,QAAQ,CAACE,MAAnB;;AACA,UAAID,GAAG,CAACE,QAAJ,CAAaZ,MAAjB,EAAyB;AACvB,aAAKxB,QAAL,CAAcc,KAAd,CAAoBC,OAApB,GAA8B,OAA9B;AACD,OAFD,MAEO;AACL,aAAKf,QAAL,CAAcc,KAAd,CAAoBC,OAApB,GAA8B,MAA9B;AACA,aAAKZ,UAAL,CAAgBiB,QAAhB,GAA2B,IAA3B;AACD;;AAED,WAAK/C,aAAL,CAAmBsD,IAAnB,CAAwB,SAAxB,EAAmCO,GAAnC;;AACA,WAAK/B,UAAL,CAAgBkC,MAAhB,CAAuBH,GAAG,CAACE,QAA3B;AACD,KAZY,CAYXpD,IAZW,CAYN,IAZM,CAAb;AAcA8C,IAAAA,OAAO,CAACQ,KAAR,CAAc,UAAUC,GAAV,EAAe;AAC3B,WAAKtC,UAAL,CAAgBa,KAAhB,CAAsBC,OAAtB,GAAgC,MAAhC;;AACA,WAAK1C,aAAL,CAAmBsD,IAAnB,CAAwB,OAAxB,EAAiC;AAAEa,QAAAA,KAAK,EAAED;AAAT,OAAjC;AACD,KAHa,CAGZvD,IAHY,CAGP,IAHO,CAAd;AAKA,WAAO8C,OAAP;AACD,GA1HwB;AA4HzB3C,EAAAA,MAAM,EAAE,YAAW;AACjB,SAAKO,QAAL,CAAcmB,KAAd,GAAsB,EAAtB;AACA,SAAKV,UAAL,CAAgBiB,QAAhB,GAA2B,IAA3B;;AACA,SAAKjB,UAAL,CAAgBsC,KAAhB;;AACA,SAAK1D,SAAL;;AACA,SAAKW,QAAL,CAAcgD,KAAd;;AACA,SAAK1C,QAAL,CAAcc,KAAd,CAAoBC,OAApB,GAA8B,MAA9B;;AACA,SAAK1C,aAAL,CAAmBsD,IAAnB,CAAwB,OAAxB;AACD,GApIwB;AAsIzBzC,EAAAA,cAAc,EAAE,UAAS+C,QAAT,EAAmB;AACjC,QAAIU,OAAO,GAAGV,QAAQ,CAACE,MAAvB;AACA,QAAI,CAACQ,OAAO,CAACP,QAAR,CAAiBZ,MAAtB,EAA8B;AAC9B,QAAII,MAAM,GAAGe,OAAO,CAACP,QAAR,CAAiB,CAAjB,CAAb;AACA,SAAKjC,UAAL,CAAgBiB,QAAhB,GAA2BQ,MAA3B;AACA,SAAKlC,QAAL,CAAcmB,KAAd,GAAsBe,MAAM,CAACrB,UAA7B;;AACA,SAAKxB,SAAL;AACD,GA7IwB;;AA+IzB;;;;;AAKA6D,EAAAA,KAAK,EAAE,UAASf,WAAT,EAAsB;AAC3B,SAAKV,QAAL,CAAcU,WAAd,EAA2BG,IAA3B,CAAgC,KAAK9C,cAArC;;AACA,WAAO,IAAP;AACD,GAvJwB;;AAyJzB;;;;;AAKA2D,EAAAA,QAAQ,EAAE,UAAShB,WAAT,EAAsB;AAC9B;AACA,SAAKnC,QAAL,CAAcmB,KAAd,GAAsBgB,WAAtB;AACA,SAAK1B,UAAL,CAAgBiB,QAAhB,GAA2B,IAA3B;;AACA,SAAKjB,UAAL,CAAgBsC,KAAhB;;AACA,SAAK1D,SAAL;;AACA,WAAO,IAAP;AACD,GArKwB;;AAuKzB;;;;;;;;;;;;AAYA+D,EAAAA,EAAE,EAAE,UAASnD,IAAT,EAAeoD,EAAf,EAAmB;AACrB,SAAK1E,aAAL,CAAmByE,EAAnB,CAAsBnD,IAAtB,EAA4BoD,EAA5B;;AACA,WAAO,IAAP;AACD,GAtLwB;;AAwLzB;;;;;;AAMAC,EAAAA,GAAG,EAAE,UAASrD,IAAT,EAAeoD,EAAf,EAAmB;AACtB,SAAK1E,aAAL,CAAmB4E,cAAnB,CAAkCtD,IAAlC,EAAwCoD,EAAxC;;AACA,WAAO,IAAP;AACD;AAjMwB,CAA3B;AAoMAG,MAAM,CAACC,OAAP,GAAiBhF,cAAjB","sourcesContent":["'use strict';\r\n\r\nvar Typeahead = require('suggestions');\r\nvar debounce = require('lodash.debounce');\r\nvar extend = require('xtend');\r\nvar EventEmitter = require('events').EventEmitter;\r\nvar exceptions = require('./exceptions');\r\nvar MapboxClient = require('mapbox/lib/services/geocoding');\r\n\r\n/**\r\n * A geocoder component using Mapbox Geocoding API\r\n * @class MapboxGeocoder\r\n *\r\n * @param {Object} options\r\n * @param {String} [options.accessToken=null] Required unless `mapboxgl.accessToken` is set globally\r\n * @param {Number} [options.zoom=16] On geocoded result what zoom level should the map animate to.\r\n * @param {Boolean} [options.flyTo=true] If false, animating the map to a selected result is disabled.\r\n * @param {String} [options.placeholder=\"Search\"] Override the default placeholder attribute value.\r\n * @example\r\n * var geocoder = new MapboxGeocoder();\r\n * map.addControl(geocoder);\r\n * @return {MapboxGeocoder} `this`\r\n */\r\nfunction MapboxGeocoder(options) {\r\n  this._eventEmitter = new EventEmitter();\r\n  this.options = extend({}, this.options, options);\r\n}\r\n\r\nMapboxGeocoder.prototype = {\r\n\r\n  options: {\r\n    placeholder: 'Search',\r\n    zoom: 16,\r\n    flyTo: true\r\n  },\r\n\r\n  onAdd: function(map) {\r\n    this._map = map;\r\n    this.mapboxClient = new MapboxClient(this.options.accessToken);\r\n    this._onChange = this._onChange.bind(this);\r\n    this._onKeyDown = this._onKeyDown.bind(this);\r\n    this._onQueryResult = this._onQueryResult.bind(this);\r\n    this._clear = this._clear.bind(this);\r\n\r\n    var el = this.container = document.createElement('div');\r\n    el.className = 'mapboxgl-ctrl-geocoder mapboxgl-ctrl';\r\n\r\n    var icon = document.createElement('span');\r\n    icon.className = 'geocoder-icon geocoder-icon-search';\r\n\r\n    this._inputEl = document.createElement('input');\r\n    this._inputEl.type = 'text';\r\n    this._inputEl.placeholder = this.options.placeholder;\r\n\r\n    this._inputEl.addEventListener('keydown', this._onKeyDown);\r\n    this._inputEl.addEventListener('change', this._onChange);\r\n\r\n    var actions = document.createElement('div');\r\n    actions.classList.add('geocoder-pin-right');\r\n\r\n    this._clearEl = document.createElement('button');\r\n    this._clearEl.className = 'geocoder-icon geocoder-icon-close';\r\n    this._clearEl.addEventListener('click', this._clear);\r\n\r\n    this._loadingEl = document.createElement('span');\r\n    this._loadingEl.className = 'geocoder-icon geocoder-icon-loading';\r\n\r\n    actions.appendChild(this._clearEl);\r\n    actions.appendChild(this._loadingEl);\r\n\r\n    el.appendChild(icon);\r\n    el.appendChild(this._inputEl);\r\n    el.appendChild(actions);\r\n\r\n    this._typeahead = new Typeahead(this._inputEl, [], { filter: false });\r\n    this._typeahead.getItemValue = function(item) { return item.place_name; };\r\n\r\n    return el;\r\n  },\r\n\r\n  onRemove: function() {\r\n    this.container.parentNode.removeChild(this.container);\r\n    this._map = null;\r\n    return this;\r\n  },\r\n\r\n  _onKeyDown: debounce(function(e) {\r\n    if (!e.target.value) {\r\n      return this._clearEl.style.display = 'none';\r\n    }\r\n\r\n    // TAB, ESC, LEFT, RIGHT, ENTER, UP, DOWN\r\n    if (e.metaKey || [9, 27, 37, 39, 13, 38, 40].indexOf(e.keyCode) !== -1) return;\r\n    this._geocode(e.target.value);\r\n  }, 200),\r\n\r\n  _onChange: function() {\r\n    if (this._inputEl.value) this._clearEl.style.display = 'block';\r\n    var selected = this._typeahead.selected;\r\n    if (selected) {\r\n      if (this.options.flyTo) {\r\n        if (!exceptions[selected.id] &&\r\n            (selected.bbox && selected.context && selected.context.length <= 3 ||\r\n            selected.bbox && !selected.context)) {\r\n          var bbox = selected.bbox;\r\n          this._map.fitBounds([[bbox[0], bbox[1]],[bbox[2], bbox[3]]]);\r\n        } else if (exceptions[selected.id]) {\r\n          // Certain geocoder search results return (and therefore zoom to fit)\r\n          // an unexpectedly large bounding box: for example, both Russia and the\r\n          // USA span both sides of -180/180, or France includes the island of\r\n          // Reunion in the Indian Ocean. An incomplete list of these exceptions\r\n          // at ./exceptions.json provides \"reasonable\" bounding boxes as a\r\n          // short-term solution; this may be amended as necessary.\r\n          this._map.fitBounds(exceptions[selected.id].bbox);\r\n        } else {\r\n          this._map.flyTo({\r\n            center: selected.center,\r\n            zoom: this.options.zoom\r\n          });\r\n        }\r\n      }\r\n      this._eventEmitter.emit('result', { result: selected });\r\n    }\r\n  },\r\n\r\n  _geocode: function(searchInput) {\r\n    this._loadingEl.style.display = 'block';\r\n    this._eventEmitter.emit('loading');\r\n    var request = this.mapboxClient.geocodeForward(searchInput, this.options);\r\n\r\n    request.then(function (response) {\r\n      this._loadingEl.style.display = 'none';\r\n      var res = response.entity;\r\n      if (res.features.length) {\r\n        this._clearEl.style.display = 'block';\r\n      } else {\r\n        this._clearEl.style.display = 'none';\r\n        this._typeahead.selected = null;\r\n      }\r\n\r\n      this._eventEmitter.emit('results', res);\r\n      this._typeahead.update(res.features);\r\n    }.bind(this));\r\n\r\n    request.catch(function (err) {\r\n      this._loadingEl.style.display = 'none';\r\n      this._eventEmitter.emit('error', { error: err });\r\n    }.bind(this));\r\n\r\n    return request;\r\n  },\r\n\r\n  _clear: function() {\r\n    this._inputEl.value = '';\r\n    this._typeahead.selected = null;\r\n    this._typeahead.clear();\r\n    this._onChange();\r\n    this._inputEl.focus();\r\n    this._clearEl.style.display = 'none';\r\n    this._eventEmitter.emit('clear');\r\n  },\r\n\r\n  _onQueryResult: function(response) {\r\n    var results = response.entity;\r\n    if (!results.features.length) return;\r\n    var result = results.features[0];\r\n    this._typeahead.selected = result;\r\n    this._inputEl.value = result.place_name;\r\n    this._onChange();\r\n  },\r\n\r\n  /**\r\n   * Set & query the input\r\n   * @param {string} searchInput location name or other search input\r\n   * @returns {MapboxGeocoder} this\r\n   */\r\n  query: function(searchInput) {\r\n    this._geocode(searchInput).then(this._onQueryResult);\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Set input\r\n   * @param {string} searchInput location name or other search input\r\n   * @returns {MapboxGeocoder} this\r\n   */\r\n  setInput: function(searchInput) {\r\n    // Set input value to passed value and clear everything else.\r\n    this._inputEl.value = searchInput;\r\n    this._typeahead.selected = null;\r\n    this._typeahead.clear();\r\n    this._onChange();\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Subscribe to events that happen within the plugin.\r\n   * @param {String} type name of event. Available events and the data passed into their respective event objects are:\r\n   *\r\n   * - __clear__ `Emitted when the input is cleared`\r\n   * - __loading__ `Emitted when the geocoder is looking up a query`\r\n   * - __results__ `{ results } Fired when the geocoder returns a response`\r\n   * - __result__ `{ result } Fired when input is set`\r\n   * - __error__ `{ error } Error as string\r\n   * @param {Function} fn function that's called when the event is emitted.\r\n   * @returns {MapboxGeocoder} this;\r\n   */\r\n  on: function(type, fn) {\r\n    this._eventEmitter.on(type, fn);\r\n    return this;\r\n  },\r\n\r\n  /**\r\n   * Remove an event\r\n   * @returns {MapboxGeocoder} this\r\n   * @param {String} type Event name.\r\n   * @param {Function} fn Function that should unsubscribe to the event emitted.\r\n   */\r\n  off: function(type, fn) {\r\n    this._eventEmitter.removeListener(type, fn);\r\n    return this;\r\n  }\r\n};\r\n\r\nmodule.exports = MapboxGeocoder;\r\n"]},"metadata":{},"sourceType":"script"}