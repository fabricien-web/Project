{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Fabricien\\\\Documents\\\\Projet\\\\fabTravel\\\\client\\\\src\\\\components\\\\Create\\\\Create.js\";\nimport React, { Component } from \"react\";\nimport \"./Create.css\";\nimport \"./Map.css\";\nimport API from \"../../utils/API\"; // import mapboxgl, { GeoJSONSource } from 'mapbox-gl'\n\nimport mapboxgl from 'mapbox-gl';\nimport MapboxGeocoder from 'mapbox-gl-geocoder';\nimport DetailsCard from \"../DetailsCard\";\nimport NavBar from \"../NavBar\";\nimport { Card, Row, Col, Button } from 'react-materialize';\nconst display = {\n  display: 'block'\n};\nconst hide = {\n  display: 'none'\n};\nvar userToken = window.localStorage.getItem(\"token\");\n\nclass Create extends Component {\n  constructor(props) {\n    super(props);\n\n    this.handleInputChange = event => {\n      let value = event.target.value;\n      let name = event.target.name;\n      this.setState({\n        [name]: value\n      });\n    };\n\n    this.onChange = e => {\n      const state = this.state;\n\n      switch (e.target.name) {\n        case 'selectedFile':\n          state.selectedFile = e.target.files[0];\n          break;\n\n        default:\n          state[e.target.name] = e.target.value;\n      }\n\n      this.setState(state);\n    };\n\n    this.handleFormSubmit = event => {\n      //console.log(this.state.location, this.state.coordinates);\n      //changes\n      // let searchBar = document.getElementsByClassName(\"mapboxgl-ctrl-geocoder mapboxgl-ctrl\");\n      // searchBar[0].style.display=\"none\";\n      this.setState({\n        isHidden: true\n      });\n      let cityData = {\n        location: this.state.location,\n        coordinates: this.state.coordinates,\n        token: this.state.token\n      };\n      let cities = this.state.userCitiesData;\n      let match = false;\n\n      if (cities.length < 1) {\n        API.saveCity({\n          cityData\n        }).then(result => {});\n      } else {\n        for (let i = 0; i < cities.length; i++) {\n          if (cities[i].location === cityData.location) {\n            console.log(\"match\");\n            match = true;\n            break;\n          }\n        }\n\n        if (match === false) {\n          API.saveCity({\n            cityData\n          }).then(result => {\n            console.log(\"saved\");\n          });\n        }\n      }\n    };\n\n    this.handleSubmitForm = e => {\n      e.preventDefault(); //changes\n      // let searchBar = document.getElementsByClassName(\"mapboxgl-ctrl-geocoder mapboxgl-ctrl\");\n      // searchBar[0].style.display = \"inline\";\n\n      this.toggle();\n      const {\n        name,\n        description,\n        selectedFile,\n        location,\n        token\n      } = this.state;\n      let formData = new FormData();\n      formData.append('name', name);\n      formData.append('description', description);\n      formData.append('selectedFile', selectedFile);\n      formData.append('location', location);\n      formData.append('token', token);\n      API.saveDetails(formData).then(result => {\n        console.log(\"save details result:\", result);\n        this.getUserData();\n        this.setState({\n          name: \"\",\n          description: \"\",\n          selectedFile: \"\"\n        });\n      });\n    };\n\n    this.deletePlace = (citiesId, detailsId) => {\n      let id = {\n        citiesId: citiesId,\n        detailsId: detailsId\n      };\n      API.deletePlace(id).then(res => this.getUserData()).catch(err => console.log(err));\n    };\n\n    this.deleteCity = (userId, citiesId) => {\n      let id = {\n        userId: userId,\n        citiesId: citiesId\n      };\n      API.deleteCity(id).then(res => this.getUserData()).catch(err => console.log(err));\n    };\n\n    this.toggle = this.toggle.bind(this);\n    this.state = {\n      toggle: false,\n      location: \"\",\n      coordinates: [],\n      name: \"\",\n      description: \"\",\n      saved: [],\n      selectedFile: \"\",\n      isHidden: false,\n      token: \"\",\n      username: \"\",\n      userCitiesData: [],\n      loggedAs: \"\"\n    };\n  }\n\n  componentWillUnmount() {\n    console.log('unmount');\n  }\n\n  toggle(event) {\n    this.setState(prevState => ({\n      toggle: !prevState.toggle\n    }));\n  }\n\n  getUserData() {\n    API.getUserData(userToken).then(result => {\n      this.setState({\n        userCitiesData: result.data.cities\n      });\n    });\n  }\n\n  currentUser() {\n    API.getCurrentUser(userToken).then(res => {\n      console.log(\"userNAME\", res);\n      this.setState({\n        loggedAs: res.data.username\n      });\n    });\n  }\n\n  logOut() {\n    window.localStorage.clear();\n    window.location = \"/\";\n  }\n\n  componentDidMount() {\n    // var userToken = window.localStorage.getItem(\"token\") \n    this.setState({\n      token: userToken\n    });\n    this.getUserData();\n    this.currentUser();\n    console.log('component is mounted');\n    mapboxgl.accessToken = 'pk.eyJ1IjoiYXJoZWVlZSIsImEiOiJjamdjeXZsaGswNmk0MzJtYWM5MXJxdWhlIn0.YLMP3IJkPnF-y8Yv0A8Udg';\n    var map = new mapboxgl.Map({\n      container: 'map',\n      style: 'mapbox://styles/arheeee/cjgcyypkq00032sqkj85b2any',\n      center: [20.107686, 31.863775],\n      zoom: 1\n    });\n    var geocoder = new MapboxGeocoder({\n      accessToken: mapboxgl.accessToken\n    });\n    var geojson = {\n      type: 'FeatureCollection',\n      features: []\n    }; // add markers to map\n    // geojson.features.forEach(function (marker) {\n    //     // create a HTML element for each feature\n    //     var el = document.createElement('div');\n    //     el.className = 'marker';\n    //     // make a marker for each feature and add to the map\n    //     new mapboxgl.Marker(el)\n    //         .setLngLat(marker.geometry.coordinates)\n    //         .addTo(map);\n    // });\n\n    map.addControl(geocoder); // After the map style has loaded on the page, add a source layer and default\n    // styling for a single point.\n    // map.addSource('single-point', {\n    //     \"type\": \"geojson\",\n    //     \"data\": {\n    //         \"type\": \"FeatureCollection\",\n    //         \"features\": []\n    //     }\n    // });\n    // map.addLayer({\n    //     \"id\": \"point\",\n    //     \"source\": \"single-point\",\n    //     \"type\": \"circle\",\n    //     \"paint\": {\n    //         \"circle-radius\": 10,\n    //         \"circle-color\": \"#007cbf\"\n    //     }\n    // });\n    // Listen for the `geocoder.input` event that is triggered when a user\n    // makes a selection and add a symbol that matches the result.\n\n    geocoder.on('result', ev => {\n      console.log(\"ev result\", ev.result);\n      geojson.features.push({\n        type: 'Feature',\n        geometry: {\n          type: 'Point',\n          coordinates: ev.result.geometry.coordinates\n        },\n        properties: {\n          title: 'Mapbox',\n          description: ev.result.place_name\n        }\n      });\n      this.setState({\n        location: ev.result.place_name,\n        coordinates: ev.result.geometry.coordinates\n      });\n      geojson.features.forEach(marker => {\n        // create a HTML element for each feature\n        var el = document.createElement('div');\n        el.className = 'marker'; // make a marker for each feature and add to the map\n\n        new mapboxgl.Marker(el).setLngLat(marker.geometry.coordinates).addTo(map);\n      });\n    }); // var marker = document.getElementsByClassName('marker');\n\n    map.on('click', function (e) {\n      console.log(\"hello\");\n      var features = map.queryRenderedFeatures(e.point, {\n        layers: ['background'] // replace this with the name of the layer\n\n      });\n\n      if (!features.length) {\n        return;\n      } // var feature = features[0];\n      // var popup = new mapboxgl.Popup({ offset: [0, -15] })\n      //     .setLngLat(feature.geometry.coordinates)\n      //     .setHTML('<h3>' + feature.properties.title + '</h3><p>' + feature.properties.description + '</p>')\n      //     .setLngLat(feature.geometry.coordinates)\n      //     .addTo(map);\n\n    });\n  }\n\n  render() {\n    var modal = [];\n    modal.push( /*#__PURE__*/React.createElement(\"div\", {\n      id: \"body2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 327,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal\",\n      style: this.state.toggle ? display : hide,\n      key: \"modal\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-content\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(Button, {\n      type: \"button\",\n      class: \"close\",\n      onClick: () => this.toggle(),\n      floating: true,\n      className: \"closeBtn\",\n      icon: \"ferm\\xE9\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 25\n      }\n    }), /*#__PURE__*/React.createElement(\"h4\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 331,\n        columnNumber: 25\n      }\n    }, this.state.location), /*#__PURE__*/React.createElement(\"p\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 332,\n        columnNumber: 25\n      }\n    }, \"Entrez les d\\xE9tails \"), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 25\n      }\n    }, /*#__PURE__*/React.createElement(\"form\", {\n      className: \"col s12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 334,\n        columnNumber: 29\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 335,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleInputChange,\n      name: \"name\",\n      id: \"name\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.name,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"name\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 345,\n        columnNumber: 41\n      }\n    }, \"Nom\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"row\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 348,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"input-field col s12\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      onChange: this.handleInputChange,\n      name: \"description\",\n      id: \"=description\",\n      type: \"text\",\n      className: \"validate\",\n      value: this.state.description,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 350,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"description\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 358,\n        columnNumber: 41\n      }\n    }, \"Description\"))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-field input-field\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 361,\n        columnNumber: 33\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      className: \"btn\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 362,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"span\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 363,\n        columnNumber: 41\n      }\n    }, \"Fichier\"), /*#__PURE__*/React.createElement(\"input\", {\n      type: \"file\",\n      onChange: this.onChange,\n      name: \"selectedFile\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 364,\n        columnNumber: 41\n      }\n    })), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"file-path-wrapper\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 370,\n        columnNumber: 37\n      }\n    }, /*#__PURE__*/React.createElement(\"input\", {\n      type: \"text\",\n      className: \"file-path validate\",\n      id: \"file\",\n      value: this.state.selectedFile,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 371,\n        columnNumber: 41\n      }\n    }), /*#__PURE__*/React.createElement(\"label\", {\n      htmlFor: \"file\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 377,\n        columnNumber: 41\n      }\n    }, \"T\\xE9l\\xE9charger une image\")))))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"modal-footer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 383,\n        columnNumber: 21\n      }\n    }, /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btn\",\n      onClick: this.handleSubmitForm,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 25\n      }\n    }, \"enregistrer\")))));\n    return /*#__PURE__*/React.createElement(\"div\", {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 390,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(NavBar, {\n      logOut: this.logOut,\n      username: this.state.loggedAs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 391,\n        columnNumber: 17\n      }\n    }), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"mapContainer\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 392,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(\"div\", {\n      id: \"map\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 393,\n        columnNumber: 21\n      }\n    }), modal), /*#__PURE__*/React.createElement(Row, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 17\n      }\n    }, /*#__PURE__*/React.createElement(Col, {\n      s: 3,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 397,\n        columnNumber: 21\n      }\n    }), /*#__PURE__*/React.createElement(Col, {\n      s: 6,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 398,\n        columnNumber: 21\n      }\n    }, !this.state.isHidden ? \"\" : /*#__PURE__*/React.createElement(Card, {\n      id: \"select-card\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 54\n      }\n    }, /*#__PURE__*/React.createElement(\"h5\", {\n      id: \"select-header\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 77\n      }\n    }, \"VILLE S\\xC9LECTIONN\\xC9E \"), /*#__PURE__*/React.createElement(\"h5\", {\n      id: \"select-place\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 399,\n        columnNumber: 124\n      }\n    }, this.state.location)))), /*#__PURE__*/React.createElement(\"div\", {\n      className: \"buttons\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 402,\n        columnNumber: 17\n      }\n    }, this.state.location === \"\" ? null : /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btn addBtn\",\n      onClick: this.handleFormSubmit,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 404,\n        columnNumber: 60\n      }\n    }, \"S\\xE9lectionnez une ville\"), !this.state.isHidden ? \"\" : /*#__PURE__*/React.createElement(\"a\", {\n      className: \"btn addBtn\",\n      onClick: this.toggle,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 405,\n        columnNumber: 50\n      }\n    }, \" Ajouter un lieu\")), /*#__PURE__*/React.createElement(DetailsCard, {\n      data: this.state.userCitiesData,\n      token: this.state.token,\n      onClick: this.deletePlace,\n      deleteCity: this.deleteCity,\n      username: this.state.loggedAs,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 408,\n        columnNumber: 17\n      }\n    }));\n  }\n\n}\n\n;\nexport default Create;","map":{"version":3,"sources":["C:/Users/Fabricien/Documents/Projet/fabTravel/client/src/components/Create/Create.js"],"names":["React","Component","API","mapboxgl","MapboxGeocoder","DetailsCard","NavBar","Card","Row","Col","Button","display","hide","userToken","window","localStorage","getItem","Create","constructor","props","handleInputChange","event","value","target","name","setState","onChange","e","state","selectedFile","files","handleFormSubmit","isHidden","cityData","location","coordinates","token","cities","userCitiesData","match","length","saveCity","then","result","i","console","log","handleSubmitForm","preventDefault","toggle","description","formData","FormData","append","saveDetails","getUserData","deletePlace","citiesId","detailsId","id","res","catch","err","deleteCity","userId","bind","saved","username","loggedAs","componentWillUnmount","prevState","data","currentUser","getCurrentUser","logOut","clear","componentDidMount","accessToken","map","Map","container","style","center","zoom","geocoder","geojson","type","features","addControl","on","ev","push","geometry","properties","title","place_name","forEach","marker","el","document","createElement","className","Marker","setLngLat","addTo","queryRenderedFeatures","point","layers","render","modal"],"mappings":"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","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./Create.css\";\r\nimport \"./Map.css\"\r\nimport API from \"../../utils/API\";\r\n// import mapboxgl, { GeoJSONSource } from 'mapbox-gl'\r\nimport mapboxgl from 'mapbox-gl'\r\nimport MapboxGeocoder from 'mapbox-gl-geocoder'\r\nimport DetailsCard from \"../DetailsCard\"\r\nimport NavBar from \"../NavBar\";\r\nimport { Card, Row, Col, Button } from 'react-materialize'\r\n\r\n\r\nconst display = {\r\n    display: 'block'\r\n};\r\nconst hide = {\r\n    display: 'none'\r\n};\r\n\r\nvar userToken = window.localStorage.getItem(\"token\")\r\n\r\nclass Create extends Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.toggle = this.toggle.bind(this);\r\n\r\n        this.state = {\r\n            toggle: false,\r\n            location: \"\",\r\n            coordinates: [],\r\n            name: \"\",\r\n            description: \"\",\r\n            saved: [],\r\n            selectedFile: \"\",\r\n            isHidden: false,\r\n            token: \"\",\r\n            username: \"\",\r\n            userCitiesData: [],\r\n            loggedAs: \"\"\r\n\r\n        }\r\n    }\r\n\r\n    componentWillUnmount() {\r\n        console.log('unmount')\r\n    }\r\n\r\n    toggle(event) {\r\n        this.setState(prevState => ({\r\n            toggle: !prevState.toggle\r\n        }));\r\n    }\r\n\r\n    handleInputChange = event => {\r\n        let value = event.target.value;\r\n        let name = event.target.name\r\n\r\n        this.setState({\r\n            [name]: value\r\n        });\r\n    };\r\n\r\n    onChange = (e) => {\r\n        const state = this.state;\r\n\r\n        switch (e.target.name) {\r\n            case 'selectedFile':\r\n                state.selectedFile = e.target.files[0];\r\n                break;\r\n            default:\r\n                state[e.target.name] = e.target.value;\r\n        }\r\n\r\n        this.setState(state);\r\n    }\r\n\r\n    // Select Place Button\r\n    handleFormSubmit = event => {\r\n        //console.log(this.state.location, this.state.coordinates);\r\n        //changes\r\n        // let searchBar = document.getElementsByClassName(\"mapboxgl-ctrl-geocoder mapboxgl-ctrl\");\r\n        // searchBar[0].style.display=\"none\";\r\n\r\n        this.setState({\r\n            isHidden: true\r\n        })\r\n\r\n        let cityData = {\r\n            location: this.state.location,\r\n            coordinates: this.state.coordinates,\r\n            token: this.state.token\r\n        }\r\n\r\n        let cities = this.state.userCitiesData\r\n\r\n        let match = false;\r\n\r\n        if (cities.length < 1) {\r\n            API.saveCity({\r\n                cityData\r\n            }).then((result) => {\r\n\r\n            })\r\n        }\r\n        else {\r\n            for (let i = 0; i < cities.length; i++) {\r\n                if (cities[i].location === cityData.location) {\r\n                    console.log(\"match\")\r\n                    match = true;\r\n                    break;\r\n                }\r\n            }\r\n            if (match === false) {\r\n                API.saveCity({\r\n                    cityData\r\n                }).then((result) => {\r\n                    console.log(\"saved\")\r\n                })\r\n            }\r\n        }\r\n    };\r\n\r\n    // Add Details Button\r\n    handleSubmitForm = (e) => {\r\n        e.preventDefault();\r\n        //changes\r\n        // let searchBar = document.getElementsByClassName(\"mapboxgl-ctrl-geocoder mapboxgl-ctrl\");\r\n        // searchBar[0].style.display = \"inline\";\r\n\r\n        this.toggle();\r\n        const { name, description, selectedFile, location, token } = this.state;\r\n        let formData = new FormData();\r\n\r\n        formData.append('name', name);\r\n        formData.append('description', description);\r\n        formData.append('selectedFile', selectedFile);\r\n        formData.append('location', location);\r\n        formData.append('token', token);\r\n\r\n        API.saveDetails(formData).then((result) => {\r\n\r\n            console.log(\"save details result:\", result)\r\n            this.getUserData();\r\n\r\n            this.setState({\r\n                name: \"\",\r\n                description: \"\",\r\n                selectedFile: \"\"\r\n            });\r\n\r\n        })\r\n    }\r\n\r\n    getUserData() {\r\n        API.getUserData(userToken).then((result) => {\r\n            this.setState({ userCitiesData: result.data.cities })\r\n        })\r\n    }\r\n\r\n    deletePlace = (citiesId, detailsId) => {\r\n\r\n        let id = {\r\n            citiesId: citiesId,\r\n            detailsId: detailsId\r\n        }\r\n\r\n        API.deletePlace(id)\r\n            .then(res => this.getUserData())\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    deleteCity = (userId, citiesId) => {\r\n\r\n        let id = {\r\n            userId: userId,\r\n            citiesId: citiesId\r\n        }\r\n\r\n        API.deleteCity(id)\r\n            .then(res => this.getUserData())\r\n            .catch(err => console.log(err));\r\n    };\r\n\r\n    currentUser() {\r\n        API.getCurrentUser(userToken).then((res) => {\r\n\r\n            console.log(\"userNAME\", res)\r\n            this.setState({ loggedAs: res.data.username })\r\n        })\r\n    }\r\n\r\n    logOut() {\r\n        window.localStorage.clear();\r\n        window.location = \"/\"\r\n    }\r\n\r\n    componentDidMount() {\r\n\r\n        // var userToken = window.localStorage.getItem(\"token\") \r\n\r\n        this.setState({ token: userToken })\r\n\r\n        this.getUserData()\r\n\r\n        this.currentUser()\r\n\r\n        console.log('component is mounted')\r\n\r\n        mapboxgl.accessToken = 'pk.eyJ1IjoiYXJoZWVlZSIsImEiOiJjamdjeXZsaGswNmk0MzJtYWM5MXJxdWhlIn0.YLMP3IJkPnF-y8Yv0A8Udg';\r\n        var map = new mapboxgl.Map({\r\n            container: 'map',\r\n            style: 'mapbox://styles/arheeee/cjgcyypkq00032sqkj85b2any',\r\n            center: [20.107686, 31.863775],\r\n            zoom: 1\r\n        });\r\n\r\n        var geocoder = new MapboxGeocoder({\r\n            accessToken: mapboxgl.accessToken\r\n        });\r\n\r\n        var geojson = {\r\n            type: 'FeatureCollection',\r\n            features: []\r\n        };\r\n\r\n        // add markers to map\r\n        // geojson.features.forEach(function (marker) {\r\n\r\n        //     // create a HTML element for each feature\r\n        //     var el = document.createElement('div');\r\n        //     el.className = 'marker';\r\n\r\n        //     // make a marker for each feature and add to the map\r\n        //     new mapboxgl.Marker(el)\r\n        //         .setLngLat(marker.geometry.coordinates)\r\n        //         .addTo(map);\r\n        // });\r\n\r\n\r\n        map.addControl(geocoder);\r\n\r\n        // After the map style has loaded on the page, add a source layer and default\r\n        // styling for a single point.\r\n        // map.addSource('single-point', {\r\n        //     \"type\": \"geojson\",\r\n        //     \"data\": {\r\n        //         \"type\": \"FeatureCollection\",\r\n        //         \"features\": []\r\n        //     }\r\n        // });\r\n\r\n        // map.addLayer({\r\n        //     \"id\": \"point\",\r\n        //     \"source\": \"single-point\",\r\n        //     \"type\": \"circle\",\r\n        //     \"paint\": {\r\n        //         \"circle-radius\": 10,\r\n        //         \"circle-color\": \"#007cbf\"\r\n        //     }\r\n        // });\r\n\r\n        // Listen for the `geocoder.input` event that is triggered when a user\r\n        // makes a selection and add a symbol that matches the result.\r\n        geocoder.on('result', (ev) => {\r\n\r\n            console.log(\"ev result\", ev.result);\r\n\r\n            geojson.features.push({\r\n                type: 'Feature',\r\n                geometry: {\r\n                    type: 'Point',\r\n                    coordinates: ev.result.geometry.coordinates\r\n                },\r\n                properties: {\r\n                    title: 'Mapbox',\r\n                    description: ev.result.place_name\r\n                }\r\n            })\r\n\r\n            this.setState({\r\n                location: ev.result.place_name,\r\n                coordinates: ev.result.geometry.coordinates\r\n            })\r\n\r\n            geojson.features.forEach((marker) => {\r\n\r\n                // create a HTML element for each feature\r\n                var el = document.createElement('div');\r\n                el.className = 'marker';\r\n\r\n\r\n\r\n                // make a marker for each feature and add to the map\r\n                new mapboxgl.Marker(el)\r\n                    .setLngLat(marker.geometry.coordinates)\r\n                    .addTo(map);\r\n            });\r\n        });\r\n\r\n        // var marker = document.getElementsByClassName('marker');\r\n\r\n        map.on('click', function (e) {\r\n            console.log(\"hello\")\r\n            var features = map.queryRenderedFeatures(e.point, {\r\n                layers: ['background'] // replace this with the name of the layer\r\n            });\r\n\r\n            if (!features.length) {\r\n                return;\r\n            }\r\n\r\n            // var feature = features[0];\r\n\r\n            // var popup = new mapboxgl.Popup({ offset: [0, -15] })\r\n            //     .setLngLat(feature.geometry.coordinates)\r\n            //     .setHTML('<h3>' + feature.properties.title + '</h3><p>' + feature.properties.description + '</p>')\r\n            //     .setLngLat(feature.geometry.coordinates)\r\n            //     .addTo(map);\r\n        });\r\n    }\r\n\r\n    render() {\r\n\r\n        var modal = [];\r\n        modal.push(\r\n            <div id=\"body2\">\r\n                <div className=\"modal\" style={this.state.toggle ? display : hide} key=\"modal\">\r\n                    <div className=\"modal-content\">\r\n                        <Button type=\"button\" class=\"close\" onClick={() => this.toggle()} floating className='closeBtn' icon='fermé' />\r\n                        <h4>{this.state.location}</h4>\r\n                        <p>Entrez les détails </p>\r\n                        <div className=\"row\">\r\n                            <form className=\"col s12\">\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <input\r\n                                            onChange={this.handleInputChange}\r\n                                            name=\"name\"\r\n                                            id=\"name\"\r\n                                            type=\"text\"\r\n                                            className=\"validate\"\r\n                                            value={this.state.name}\r\n                                        />\r\n                                        <label htmlFor=\"name\">Nom</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"row\">\r\n                                    <div className=\"input-field col s12\">\r\n                                        <input\r\n                                            onChange={this.handleInputChange}\r\n                                            name=\"description\"\r\n                                            id=\"=description\"\r\n                                            type=\"text\"\r\n                                            className=\"validate\"\r\n                                            value={this.state.description}\r\n                                        />\r\n                                        <label htmlFor=\"description\">Description</label>\r\n                                    </div>\r\n                                </div>\r\n                                <div className=\"file-field input-field\">\r\n                                    <div className=\"btn\">\r\n                                        <span>Fichier</span>\r\n                                        <input\r\n                                            type=\"file\"\r\n                                            onChange={this.onChange}\r\n                                            name=\"selectedFile\"\r\n                                        />\r\n                                    </div>\r\n                                    <div className=\"file-path-wrapper\">\r\n                                        <input\r\n                                            type=\"text\"\r\n                                            className=\"file-path validate\"\r\n                                            id=\"file\"\r\n                                            value={this.state.selectedFile}\r\n                                        />\r\n                                        <label htmlFor=\"file\">Télécharger une image</label>\r\n                                    </div>\r\n                                </div>\r\n                            </form>\r\n                        </div>\r\n                    </div>\r\n                    <div className=\"modal-footer\">\r\n                        <a className=\"btn\" onClick={this.handleSubmitForm}>enregistrer</a>\r\n                    </div>\r\n                </div></div>\r\n        );\r\n\r\n        return (\r\n            <div>\r\n                <NavBar logOut={this.logOut} username={this.state.loggedAs} />\r\n                <div className='mapContainer'>\r\n                    <div id='map'></div>\r\n                    {modal}\r\n                </div>\r\n                <Row>\r\n                    <Col s={3}></Col>\r\n                    <Col s={6}>\r\n                        {!this.state.isHidden ? \"\" : <Card id=\"select-card\"><h5 id=\"select-header\">VILLE SÉLECTIONNÉE </h5><h5 id=\"select-place\">{this.state.location}</h5></Card>}\r\n                    </Col>\r\n                </Row>\r\n                <div className=\"buttons\">\r\n\r\n                    {(this.state.location === \"\") ? null : <a className=\"btn addBtn\" onClick={this.handleFormSubmit}>Sélectionnez une ville</a>}\r\n                    {!this.state.isHidden ? \"\" : <a className=\"btn addBtn\" onClick={this.toggle}> Ajouter un lieu</a>}\r\n                </div>\r\n\r\n                <DetailsCard data={this.state.userCitiesData} token={this.state.token} onClick={this.deletePlace} deleteCity={this.deleteCity} username={this.state.loggedAs} />\r\n            </div>\r\n\r\n        )\r\n    }\r\n};\r\n\r\n\r\nexport default Create;\r\n"]},"metadata":{},"sourceType":"module"}