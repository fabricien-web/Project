{"ast":null,"code":"'use strict';\n/**\r\n * A typeahead component for inputs\r\n * @class Suggestions\r\n *\r\n * @param {HTMLInputElement} el A valid HTML input element\r\n * @param {Array} data An array of data used for results\r\n * @param {Object} options\r\n * @param {Number} [options.limit=5] Max number of results to display in the auto suggest list.\r\n * @param {Number} [options.minLength=2] Number of characters typed into an input to trigger suggestions.\r\n * @return {Suggestions} `this`\r\n * @example\r\n * // in the browser\r\n * var input = document.querySelector('input');\r\n * var data = [\r\n *   'Roy Eldridge',\r\n *   'Roy Hargrove',\r\n *   'Rex Stewart'\r\n * ];\r\n *\r\n * new Suggestions(input, data);\r\n *\r\n * // with options\r\n * var input = document.querySelector('input');\r\n * var data = [{\r\n *   name: 'Roy Eldridge',\r\n *   year: 1911\r\n * }, {\r\n *   name: 'Roy Hargrove',\r\n *   year: 1969\r\n * }, {\r\n *   name: 'Rex Stewart',\r\n *   year: 1907\r\n * }];\r\n *\r\n * var typeahead = new Suggestions(input, data, {\r\n *   filter: false, // Disable filtering\r\n *   minLength: 3, // Number of characters typed into an input to trigger suggestions.\r\n *   limit: 3 //  Max number of results to display.\r\n * });\r\n *\r\n * // As we're passing an object of an arrays as data, override\r\n * // `getItemValue` by specifying the specific property to search on.\r\n * typeahead.getItemValue = function(item) { return item.name };\r\n *\r\n * input.addEventListener('change', function() {\r\n *   console.log(typeahead.selected); // Current selected item.\r\n * });\r\n *\r\n * // With browserify\r\n * var Suggestions = require('suggestions');\r\n *\r\n * new Suggestions(input, data);\r\n */\n\nvar Suggestions = require('./src/suggestions');\n\nwindow.Suggestions = module.exports = Suggestions;","map":{"version":3,"sources":["C:/Users/Fabricien/Documents/Projet/Touriste/client/node_modules/suggestions/index.js"],"names":["Suggestions","require","window","module","exports"],"mappings":"AAAA;AAEA;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAqDA,IAAIA,WAAW,GAAGC,OAAO,CAAC,mBAAD,CAAzB;;AACAC,MAAM,CAACF,WAAP,GAAqBG,MAAM,CAACC,OAAP,GAAiBJ,WAAtC","sourcesContent":["'use strict';\r\n\r\n/**\r\n * A typeahead component for inputs\r\n * @class Suggestions\r\n *\r\n * @param {HTMLInputElement} el A valid HTML input element\r\n * @param {Array} data An array of data used for results\r\n * @param {Object} options\r\n * @param {Number} [options.limit=5] Max number of results to display in the auto suggest list.\r\n * @param {Number} [options.minLength=2] Number of characters typed into an input to trigger suggestions.\r\n * @return {Suggestions} `this`\r\n * @example\r\n * // in the browser\r\n * var input = document.querySelector('input');\r\n * var data = [\r\n *   'Roy Eldridge',\r\n *   'Roy Hargrove',\r\n *   'Rex Stewart'\r\n * ];\r\n *\r\n * new Suggestions(input, data);\r\n *\r\n * // with options\r\n * var input = document.querySelector('input');\r\n * var data = [{\r\n *   name: 'Roy Eldridge',\r\n *   year: 1911\r\n * }, {\r\n *   name: 'Roy Hargrove',\r\n *   year: 1969\r\n * }, {\r\n *   name: 'Rex Stewart',\r\n *   year: 1907\r\n * }];\r\n *\r\n * var typeahead = new Suggestions(input, data, {\r\n *   filter: false, // Disable filtering\r\n *   minLength: 3, // Number of characters typed into an input to trigger suggestions.\r\n *   limit: 3 //  Max number of results to display.\r\n * });\r\n *\r\n * // As we're passing an object of an arrays as data, override\r\n * // `getItemValue` by specifying the specific property to search on.\r\n * typeahead.getItemValue = function(item) { return item.name };\r\n *\r\n * input.addEventListener('change', function() {\r\n *   console.log(typeahead.selected); // Current selected item.\r\n * });\r\n *\r\n * // With browserify\r\n * var Suggestions = require('suggestions');\r\n *\r\n * new Suggestions(input, data);\r\n */\r\nvar Suggestions = require('./src/suggestions');\r\nwindow.Suggestions = module.exports = Suggestions;\r\n"]},"metadata":{},"sourceType":"script"}