{"ast":null,"code":"/*\r\n * Copyright 2014-2016 the original author or authors\r\n * @license MIT, see LICENSE.txt for details\r\n *\r\n * @author Scott Andrews\r\n */\n'use strict';\n/**\r\n * Add common helper methods to a client impl\r\n *\r\n * @param {function} impl the client implementation\r\n * @param {Client} [target] target of this client, used when wrapping other clients\r\n * @returns {Client} the client impl with additional methods\r\n */\n\nmodule.exports = function client(impl, target) {\n  if (target) {\n    /**\r\n     * @returns {Client} the target client\r\n     */\n    impl.skip = function skip() {\n      return target;\n    };\n  }\n  /**\r\n   * Allow a client to easily be wrapped by an interceptor\r\n   *\r\n   * @param {Interceptor} interceptor the interceptor to wrap this client with\r\n   * @param [config] configuration for the interceptor\r\n   * @returns {Client} the newly wrapped client\r\n   */\n\n\n  impl.wrap = function wrap(interceptor, config) {\n    return interceptor(impl, config);\n  };\n  /**\r\n   * @deprecated\r\n   */\n\n\n  impl.chain = function chain() {\n    if (typeof console !== 'undefined') {\n      console.log('rest.js: client.chain() is deprecated, use client.wrap() instead');\n    }\n\n    return impl.wrap.apply(this, arguments);\n  };\n\n  return impl;\n};","map":{"version":3,"sources":["C:/Users/Fabricien/Documents/Projet/Touriste/client/node_modules/rest/client.js"],"names":["module","exports","client","impl","target","skip","wrap","interceptor","config","chain","console","log","apply","arguments"],"mappings":"AAAA;;;;;;AAOA;AAEA;;;;;;;;AAOAA,MAAM,CAACC,OAAP,GAAiB,SAASC,MAAT,CAAgBC,IAAhB,EAAsBC,MAAtB,EAA8B;AAE9C,MAAIA,MAAJ,EAAY;AAEX;;;AAGAD,IAAAA,IAAI,CAACE,IAAL,GAAY,SAASA,IAAT,GAAgB;AAC3B,aAAOD,MAAP;AACA,KAFD;AAIA;AAED;;;;;;;;;AAOAD,EAAAA,IAAI,CAACG,IAAL,GAAY,SAASA,IAAT,CAAcC,WAAd,EAA2BC,MAA3B,EAAmC;AAC9C,WAAOD,WAAW,CAACJ,IAAD,EAAOK,MAAP,CAAlB;AACA,GAFD;AAIA;;;;;AAGAL,EAAAA,IAAI,CAACM,KAAL,GAAa,SAASA,KAAT,GAAiB;AAC7B,QAAI,OAAOC,OAAP,KAAmB,WAAvB,EAAoC;AACnCA,MAAAA,OAAO,CAACC,GAAR,CAAY,kEAAZ;AACA;;AAED,WAAOR,IAAI,CAACG,IAAL,CAAUM,KAAV,CAAgB,IAAhB,EAAsBC,SAAtB,CAAP;AACA,GAND;;AAQA,SAAOV,IAAP;AAEA,CArCD","sourcesContent":["/*\r\n * Copyright 2014-2016 the original author or authors\r\n * @license MIT, see LICENSE.txt for details\r\n *\r\n * @author Scott Andrews\r\n */\r\n\r\n'use strict';\r\n\r\n/**\r\n * Add common helper methods to a client impl\r\n *\r\n * @param {function} impl the client implementation\r\n * @param {Client} [target] target of this client, used when wrapping other clients\r\n * @returns {Client} the client impl with additional methods\r\n */\r\nmodule.exports = function client(impl, target) {\r\n\r\n\tif (target) {\r\n\r\n\t\t/**\r\n\t\t * @returns {Client} the target client\r\n\t\t */\r\n\t\timpl.skip = function skip() {\r\n\t\t\treturn target;\r\n\t\t};\r\n\r\n\t}\r\n\r\n\t/**\r\n\t * Allow a client to easily be wrapped by an interceptor\r\n\t *\r\n\t * @param {Interceptor} interceptor the interceptor to wrap this client with\r\n\t * @param [config] configuration for the interceptor\r\n\t * @returns {Client} the newly wrapped client\r\n\t */\r\n\timpl.wrap = function wrap(interceptor, config) {\r\n\t\treturn interceptor(impl, config);\r\n\t};\r\n\r\n\t/**\r\n\t * @deprecated\r\n\t */\r\n\timpl.chain = function chain() {\r\n\t\tif (typeof console !== 'undefined') {\r\n\t\t\tconsole.log('rest.js: client.chain() is deprecated, use client.wrap() instead');\r\n\t\t}\r\n\r\n\t\treturn impl.wrap.apply(this, arguments);\r\n\t};\r\n\r\n\treturn impl;\r\n\r\n};\r\n"]},"metadata":{},"sourceType":"script"}