{"ast":null,"code":"/*\r\n * Copyright 2015-2016 the original author or authors\r\n * @license MIT, see LICENSE.txt for details\r\n *\r\n * @author Scott Andrews\r\n */\n'use strict';\n\nvar interceptor, uriTemplate, mixin;\ninterceptor = require('../interceptor');\nuriTemplate = require('../util/uriTemplate');\nmixin = require('../util/mixin');\n/**\r\n * Applies request params to the path as a URI Template\r\n *\r\n * Params are removed from the request object, as they have been consumed.\r\n *\r\n * @see https://tools.ietf.org/html/rfc6570\r\n *\r\n * @param {Client} [client] client to wrap\r\n * @param {Object} [config.params] default param values\r\n * @param {string} [config.template] default template\r\n *\r\n * @returns {Client}\r\n */\n\nmodule.exports = interceptor({\n  init: function (config) {\n    config.params = config.params || {};\n    config.template = config.template || '';\n    return config;\n  },\n  request: function (request, config) {\n    var template, params;\n    template = request.path || config.template;\n    params = mixin({}, request.params, config.params);\n    request.path = uriTemplate.expand(template, params);\n    delete request.params;\n    return request;\n  }\n});","map":{"version":3,"sources":["C:/Users/Fabricien/Documents/Projet/Touriste/client/node_modules/rest/interceptor/template.js"],"names":["interceptor","uriTemplate","mixin","require","module","exports","init","config","params","template","request","path","expand"],"mappings":"AAAA;;;;;;AAOA;;AAEA,IAAIA,WAAJ,EAAiBC,WAAjB,EAA8BC,KAA9B;AAEAF,WAAW,GAAGG,OAAO,CAAC,gBAAD,CAArB;AACAF,WAAW,GAAGE,OAAO,CAAC,qBAAD,CAArB;AACAD,KAAK,GAAGC,OAAO,CAAC,eAAD,CAAf;AAEA;;;;;;;;;;;;;;AAaAC,MAAM,CAACC,OAAP,GAAiBL,WAAW,CAAC;AAC5BM,EAAAA,IAAI,EAAE,UAAUC,MAAV,EAAkB;AACvBA,IAAAA,MAAM,CAACC,MAAP,GAAgBD,MAAM,CAACC,MAAP,IAAiB,EAAjC;AACAD,IAAAA,MAAM,CAACE,QAAP,GAAkBF,MAAM,CAACE,QAAP,IAAmB,EAArC;AACA,WAAOF,MAAP;AACA,GAL2B;AAM5BG,EAAAA,OAAO,EAAE,UAAUA,OAAV,EAAmBH,MAAnB,EAA2B;AACnC,QAAIE,QAAJ,EAAcD,MAAd;AAEAC,IAAAA,QAAQ,GAAGC,OAAO,CAACC,IAAR,IAAgBJ,MAAM,CAACE,QAAlC;AACAD,IAAAA,MAAM,GAAGN,KAAK,CAAC,EAAD,EAAKQ,OAAO,CAACF,MAAb,EAAqBD,MAAM,CAACC,MAA5B,CAAd;AAEAE,IAAAA,OAAO,CAACC,IAAR,GAAeV,WAAW,CAACW,MAAZ,CAAmBH,QAAnB,EAA6BD,MAA7B,CAAf;AACA,WAAOE,OAAO,CAACF,MAAf;AAEA,WAAOE,OAAP;AACA;AAhB2B,CAAD,CAA5B","sourcesContent":["/*\r\n * Copyright 2015-2016 the original author or authors\r\n * @license MIT, see LICENSE.txt for details\r\n *\r\n * @author Scott Andrews\r\n */\r\n\r\n'use strict';\r\n\r\nvar interceptor, uriTemplate, mixin;\r\n\r\ninterceptor = require('../interceptor');\r\nuriTemplate = require('../util/uriTemplate');\r\nmixin = require('../util/mixin');\r\n\r\n/**\r\n * Applies request params to the path as a URI Template\r\n *\r\n * Params are removed from the request object, as they have been consumed.\r\n *\r\n * @see https://tools.ietf.org/html/rfc6570\r\n *\r\n * @param {Client} [client] client to wrap\r\n * @param {Object} [config.params] default param values\r\n * @param {string} [config.template] default template\r\n *\r\n * @returns {Client}\r\n */\r\nmodule.exports = interceptor({\r\n\tinit: function (config) {\r\n\t\tconfig.params = config.params || {};\r\n\t\tconfig.template = config.template || '';\r\n\t\treturn config;\r\n\t},\r\n\trequest: function (request, config) {\r\n\t\tvar template, params;\r\n\r\n\t\ttemplate = request.path || config.template;\r\n\t\tparams = mixin({}, request.params, config.params);\r\n\r\n\t\trequest.path = uriTemplate.expand(template, params);\r\n\t\tdelete request.params;\r\n\r\n\t\treturn request;\r\n\t}\r\n});\r\n"]},"metadata":{},"sourceType":"script"}